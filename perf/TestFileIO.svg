<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>__strlen_avx2 (500,000 samples, 0.06%)</title><rect x="833.4" y="1973" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="836.39" y="1983.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (750,000 samples, 0.08%)</title><rect x="783.0" y="1973" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="786.05" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,500,000 samples, 0.83%)</title><rect x="602.9" y="1941" width="9.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="605.94" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (64,750,000 samples, 7.17%)</title><rect x="96.6" y="1877" width="84.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="99.62" y="1887.5" >[[kernel...</text>
</g>
<g >
<title>std::stack&lt;TrieNode*, std::deque&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt; &gt;::stack&lt;std::deque&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt;, void&gt; (250,000 samples, 0.03%)</title><rect x="1155.0" y="2005" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1158.02" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (250,000 samples, 0.03%)</title><rect x="473.2" y="2021" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="476.17" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="981" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="991.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="709" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="719.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (1,000,000 samples, 0.11%)</title><rect x="1186.4" y="2053" width="1.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1189.40" y="2063.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="10.0" y="1909" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,000,000 samples, 1.77%)</title><rect x="160.4" y="1813" width="20.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="163.36" y="1823.5" ></text>
</g>
<g >
<title>CreateDir (5,000,000 samples, 0.55%)</title><rect x="625.8" y="1989" width="6.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="628.82" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1541" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1551.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="870.0" y="1957" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="872.99" y="1967.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, TrieNode*, false&gt;::_M_head (250,000 samples, 0.03%)</title><rect x="810.2" y="1877" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="813.18" y="1887.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (500,000 samples, 0.06%)</title><rect x="1184.4" y="2053" width="0.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1187.44" y="2063.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1,000,000 samples, 0.11%)</title><rect x="847.1" y="853" width="1.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="850.11" y="863.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="49.9" y="1957" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.88" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="181" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (750,000 samples, 0.08%)</title><rect x="847.4" y="789" width="1.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="850.44" y="799.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1765" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1775.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (500,000 samples, 0.06%)</title><rect x="465.7" y="2005" width="0.6" height="15.0" fill="rgb(220,71,16)" rx="2" ry="2" />
<text  x="468.66" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1285" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1295.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (10,750,000 samples, 1.19%)</title><rect x="768.7" y="1973" width="14.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="771.66" y="1983.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (250,000 samples, 0.03%)</title><rect x="620.9" y="1989" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="623.92" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19,250,000 samples, 2.13%)</title><rect x="679.8" y="1829" width="25.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="682.76" y="1839.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,000,000 samples, 6.65%)</title><rect x="895.5" y="1957" width="78.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="898.49" y="1967.5" >[[kernel...</text>
</g>
<g >
<title>std::use_facet&lt;std::codecvt&lt;char, char, __mbstate_t&gt; &gt; (250,000 samples, 0.03%)</title><rect x="40.1" y="2021" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="43.07" y="2031.5" ></text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,250,000 samples, 0.14%)</title><rect x="466.3" y="2005" width="1.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="469.31" y="2015.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (250,000 samples, 0.03%)</title><rect x="486.9" y="2021" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="489.90" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1381" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1391.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11,000,000 samples, 1.22%)</title><rect x="1007.6" y="1813" width="14.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1010.61" y="1823.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (750,000 samples, 0.08%)</title><rect x="822.9" y="1829" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="825.93" y="1839.5" ></text>
</g>
<g >
<title>[TestFileIO] (500,000 samples, 0.06%)</title><rect x="852.0" y="1973" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="855.02" y="1983.5" ></text>
</g>
<g >
<title>operator new (250,000 samples, 0.03%)</title><rect x="888.3" y="1973" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="891.30" y="1983.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1,500,000 samples, 0.17%)</title><rect x="864.4" y="1957" width="2.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="867.44" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt;::_M_head (250,000 samples, 0.03%)</title><rect x="810.2" y="1893" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="813.18" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (250,000 samples, 0.03%)</title><rect x="766.0" y="1989" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="769.05" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1,500,000 samples, 0.17%)</title><rect x="1173.7" y="2053" width="1.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1176.66" y="2063.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (250,000 samples, 0.03%)</title><rect x="490.8" y="2005" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="493.83" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (4,250,000 samples, 0.47%)</title><rect x="462.4" y="2037" width="5.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="465.39" y="2047.5" ></text>
</g>
<g >
<title>_int_malloc (2,500,000 samples, 0.28%)</title><rect x="1162.2" y="2053" width="3.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1165.22" y="2063.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (250,000 samples, 0.03%)</title><rect x="491.2" y="2005" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="494.15" y="2015.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (250,000 samples, 0.03%)</title><rect x="800.4" y="1909" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="803.37" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1957" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,500,000 samples, 0.28%)</title><rect x="617.3" y="1813" width="3.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="620.32" y="1823.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (500,000 samples, 0.06%)</title><rect x="1147.5" y="2005" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1150.51" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_S_cget (500,000 samples, 0.06%)</title><rect x="825.2" y="1861" width="0.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="828.21" y="1871.5" ></text>
</g>
<g >
<title>std::default_delete&lt;TrieNode&gt;::operator (750,000 samples, 0.08%)</title><rect x="847.4" y="725" width="1.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="850.44" y="735.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt;::_M_deallocate_node (250,000 samples, 0.03%)</title><rect x="891.6" y="1925" width="0.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="894.57" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1,250,000 samples, 0.14%)</title><rect x="780.8" y="1909" width="1.6" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="783.76" y="1919.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (29,250,000 samples, 3.24%)</title><rect x="725.5" y="1813" width="38.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="728.52" y="1823.5" >[[k..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_buckets (250,000 samples, 0.03%)</title><rect x="845.2" y="1685" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="848.15" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (51,250,000 samples, 5.68%)</title><rect x="187.5" y="1973" width="67.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="190.49" y="1983.5" >[[kerne..</text>
</g>
<g >
<title>std::__relocate_a_1&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (750,000 samples, 0.08%)</title><rect x="630.1" y="1893" width="1.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="633.07" y="1903.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (500,000 samples, 0.06%)</title><rect x="469.6" y="2005" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="472.58" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21,000,000 samples, 2.33%)</title><rect x="946.5" y="1845" width="27.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="949.48" y="1855.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="627.1" y="1861" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="630.13" y="1871.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (41,250,000 samples, 4.57%)</title><rect x="709.8" y="1909" width="54.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="712.83" y="1919.5" >[[ker..</text>
</g>
<g >
<title>TrieNode::~TrieNode (250,000 samples, 0.03%)</title><rect x="844.8" y="1781" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="847.83" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;::_M_addr (500,000 samples, 0.06%)</title><rect x="820.6" y="1813" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="823.64" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="627.1" y="1797" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="630.13" y="1807.5" ></text>
</g>
<g >
<title>_IO_link_in (250,000 samples, 0.03%)</title><rect x="43.0" y="2037" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="46.01" y="2047.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,500,000 samples, 0.83%)</title><rect x="602.9" y="1989" width="9.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="605.94" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (24,250,000 samples, 2.69%)</title><rect x="403.2" y="1829" width="31.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="406.22" y="1839.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,750,000 samples, 0.97%)</title><rect x="243.1" y="1797" width="11.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="246.06" y="1807.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (2,250,000 samples, 0.25%)</title><rect x="846.1" y="1477" width="3.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="849.13" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1077" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1087.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,000,000 samples, 1.55%)</title><rect x="568.3" y="1973" width="18.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="571.29" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="293" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_deallocate (750,000 samples, 0.08%)</title><rect x="628.1" y="1941" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="631.11" y="1951.5" ></text>
</g>
<g >
<title>std::stack&lt;TrieNode*, std::deque&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt; &gt;::~stack (500,000 samples, 0.06%)</title><rect x="891.2" y="1989" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="894.24" y="1999.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (250,000 samples, 0.03%)</title><rect x="844.2" y="1925" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="847.17" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (27,250,000 samples, 3.02%)</title><rect x="1099.5" y="1989" width="35.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1102.46" y="1999.5" >[[k..</text>
</g>
<g >
<title>std::forward&lt;char const  (250,000 samples, 0.03%)</title><rect x="792.5" y="1973" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="795.53" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,250,000 samples, 2.24%)</title><rect x="1071.0" y="1829" width="26.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1074.02" y="1839.5" >[..</text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, 0ul&gt; (1,000,000 samples, 0.11%)</title><rect x="803.0" y="1861" width="1.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="805.99" y="1871.5" ></text>
</g>
<g >
<title>TestRemoveDir (408,250,000 samples, 45.24%)</title><rect x="621.9" y="2021" width="533.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="624.90" y="2031.5" >TestRemoveDir</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (2,500,000 samples, 0.28%)</title><rect x="845.8" y="1653" width="3.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="848.81" y="1663.5" ></text>
</g>
<g >
<title>__vfprintf_internal (500,000 samples, 0.06%)</title><rect x="440.2" y="2021" width="0.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="443.16" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, false, true&gt;::operator (250,000 samples, 0.03%)</title><rect x="804.3" y="1925" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="807.29" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_deallocate_buckets (250,000 samples, 0.03%)</title><rect x="846.8" y="997" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="849.79" y="1007.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (250,000 samples, 0.03%)</title><rect x="20.5" y="2021" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="23.46" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="627.1" y="1845" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="630.13" y="1855.5" ></text>
</g>
<g >
<title>[TestFileIO] (500,000 samples, 0.06%)</title><rect x="632.4" y="1989" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="635.36" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::get (250,000 samples, 0.03%)</title><rect x="840.6" y="1957" width="0.3" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="843.58" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,250,000 samples, 0.36%)</title><rect x="596.7" y="1845" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.73" y="1855.5" ></text>
</g>
<g >
<title>std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::close (250,000 samples, 0.03%)</title><rect x="1149.8" y="2005" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1152.80" y="2015.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_deallocate (250,000 samples, 0.03%)</title><rect x="632.0" y="1941" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="635.03" y="1951.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (500,000 samples, 0.06%)</title><rect x="41.4" y="2021" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="44.38" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (43,750,000 samples, 4.85%)</title><rect x="501.3" y="2021" width="57.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="504.29" y="2031.5" >[[kern..</text>
</g>
<g >
<title>std::pointer_traits&lt;std::__detail::_Hash_node_base**&gt;::pointer_to (250,000 samples, 0.03%)</title><rect x="846.1" y="1317" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="849.13" y="1327.5" ></text>
</g>
<g >
<title>fclose@@GLIBC_2.2.5 (1,500,000 samples, 0.17%)</title><rect x="456.5" y="2037" width="2.0" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="459.50" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="533" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,000,000 samples, 0.44%)</title><rect x="249.3" y="1749" width="5.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="252.27" y="1759.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::get (1,000,000 samples, 0.11%)</title><rect x="839.3" y="1973" width="1.3" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="842.27" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,500,000 samples, 1.61%)</title><rect x="567.6" y="1989" width="19.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="570.64" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (36,750,000 samples, 4.07%)</title><rect x="133.2" y="1845" width="48.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="136.23" y="1855.5" >[[ke..</text>
</g>
<g >
<title>CreateFilesAndLinks (127,500,000 samples, 14.13%)</title><rect x="621.9" y="2005" width="166.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="624.90" y="2015.5" >CreateFilesAndLinks</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (750,000 samples, 0.08%)</title><rect x="771.6" y="1957" width="1.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="774.61" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (23,250,000 samples, 2.58%)</title><rect x="11.6" y="2037" width="30.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.63" y="2047.5" >[u..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="586.6" y="1989" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="589.60" y="1999.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::end (250,000 samples, 0.03%)</title><rect x="843.2" y="1973" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="846.19" y="1983.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (250,000 samples, 0.03%)</title><rect x="782.7" y="1973" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="785.72" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1,000,000 samples, 0.11%)</title><rect x="490.8" y="2021" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="493.83" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,000,000 samples, 1.44%)</title><rect x="956.9" y="1829" width="17.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="959.94" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,500,000 samples, 0.50%)</title><rect x="614.7" y="1877" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="617.71" y="1887.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.6" y="2005" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.56" y="2015.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (250,000 samples, 0.03%)</title><rect x="891.6" y="1893" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="894.57" y="1903.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (250,000 samples, 0.03%)</title><rect x="1148.2" y="2005" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1151.16" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,750,000 samples, 0.75%)</title><rect x="577.8" y="1909" width="8.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="580.77" y="1919.5" ></text>
</g>
<g >
<title>std::default_delete&lt;TrieNode&gt;::operator (1,000,000 samples, 0.11%)</title><rect x="847.1" y="901" width="1.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="850.11" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (250,000 samples, 0.03%)</title><rect x="857.9" y="1973" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="860.90" y="1983.5" ></text>
</g>
<g >
<title>std::locale::~locale (500,000 samples, 0.06%)</title><rect x="39.4" y="2021" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="42.42" y="2031.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (1,250,000 samples, 0.14%)</title><rect x="846.8" y="1029" width="1.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="849.79" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1861" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1669" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1679.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,750,000 samples, 0.86%)</title><rect x="1031.1" y="1829" width="10.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1034.14" y="1839.5" ></text>
</g>
<g >
<title>malloc (250,000 samples, 0.03%)</title><rect x="801.4" y="1893" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="804.35" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1189" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1199.5" ></text>
</g>
<g >
<title>std::locale::locale (250,000 samples, 0.03%)</title><rect x="468.3" y="1989" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="471.27" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,250,000 samples, 2.02%)</title><rect x="562.7" y="2005" width="23.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="565.74" y="2015.5" >[..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;TrieNode&gt; &gt;::_M_head (250,000 samples, 0.03%)</title><rect x="841.9" y="1909" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="844.88" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="229" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::_M_deleter (500,000 samples, 0.06%)</title><rect x="796.1" y="1925" width="0.7" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="799.12" y="1935.5" ></text>
</g>
<g >
<title>__GI___libc_open (100,250,000 samples, 11.11%)</title><rect x="50.2" y="2037" width="131.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="53.20" y="2047.5" >__GI___libc_open</text>
</g>
<g >
<title>realpath@@GLIBC_2.3 (250,000 samples, 0.03%)</title><rect x="1156.0" y="2021" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1159.01" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (27,500,000 samples, 3.05%)</title><rect x="1061.5" y="1845" width="36.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1064.54" y="1855.5" >[[k..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (32,500,000 samples, 3.60%)</title><rect x="721.3" y="1829" width="42.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="724.27" y="1839.5" >[[ke..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (500,000 samples, 0.06%)</title><rect x="803.0" y="1845" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="805.99" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="805" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="815.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,250,000 samples, 0.58%)</title><rect x="967.1" y="1781" width="6.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="970.07" y="1791.5" ></text>
</g>
<g >
<title>std::__to_address&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; (250,000 samples, 0.03%)</title><rect x="805.3" y="1925" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="808.27" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (3,000,000 samples, 0.33%)</title><rect x="845.5" y="1701" width="3.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="848.48" y="1711.5" ></text>
</g>
<g >
<title>__strlen_avx2 (250,000 samples, 0.03%)</title><rect x="437.2" y="2037" width="0.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="440.22" y="2047.5" ></text>
</g>
<g >
<title>__GI___libc_open (250,000 samples, 0.03%)</title><rect x="558.5" y="2053" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="561.49" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::~_Hashtable_alloc (250,000 samples, 0.03%)</title><rect x="844.2" y="1909" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="847.17" y="1919.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (250,000 samples, 0.03%)</title><rect x="602.0" y="1973" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="604.96" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.6" y="1893" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.56" y="1903.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::get_deleter (500,000 samples, 0.06%)</title><rect x="796.1" y="1941" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="799.12" y="1951.5" ></text>
</g>
<g >
<title>CreateDir (1,250,000 samples, 0.14%)</title><rect x="601.0" y="2005" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="603.98" y="2015.5" ></text>
</g>
<g >
<title>__vfprintf_internal (750,000 samples, 0.08%)</title><rect x="15.9" y="1989" width="1.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="18.88" y="1999.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt;::_M_head (250,000 samples, 0.03%)</title><rect x="842.9" y="1909" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="845.86" y="1919.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,250,000 samples, 0.25%)</title><rect x="760.8" y="1717" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="763.82" y="1727.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (250,000 samples, 0.03%)</title><rect x="37.5" y="2021" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="40.46" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (250,000 samples, 0.03%)</title><rect x="788.3" y="1989" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="791.28" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,250,000 samples, 4.46%)</title><rect x="711.1" y="1877" width="52.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="714.14" y="1887.5" >[[ker..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1605" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (250,000 samples, 0.03%)</title><rect x="36.1" y="2021" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="39.15" y="2031.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (3,500,000 samples, 0.39%)</title><rect x="844.8" y="1845" width="4.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="847.83" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (750,000 samples, 0.08%)</title><rect x="471.5" y="2021" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="474.54" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="613" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (1,000,000 samples, 0.11%)</title><rect x="847.1" y="965" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="850.11" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52,500,000 samples, 5.82%)</title><rect x="185.9" y="2005" width="68.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="188.86" y="2015.5" >[[kerne..</text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_S_cget (250,000 samples, 0.03%)</title><rect x="825.9" y="1877" width="0.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="828.87" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1221" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1231.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (250,000 samples, 0.03%)</title><rect x="602.0" y="1957" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="604.96" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,750,000 samples, 0.64%)</title><rect x="966.4" y="1797" width="7.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="969.42" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3,000,000 samples, 0.33%)</title><rect x="627.5" y="1957" width="3.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="630.46" y="1967.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (250,000 samples, 0.03%)</title><rect x="763.8" y="1989" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="766.76" y="1999.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2,250,000 samples, 0.25%)</title><rect x="846.1" y="1381" width="3.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="849.13" y="1391.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,000,000 samples, 3.10%)</title><rect x="668.3" y="1845" width="36.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="671.32" y="1855.5" >[[k..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1701" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (41,250,000 samples, 4.57%)</title><rect x="709.8" y="1925" width="54.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="712.83" y="1935.5" >[[ker..</text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::operator[] (7,250,000 samples, 0.80%)</title><rect x="797.1" y="1957" width="9.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="800.10" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.6" y="1973" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.56" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3,000,000 samples, 0.33%)</title><rect x="1143.3" y="2005" width="3.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1146.26" y="2015.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (250,000 samples, 0.03%)</title><rect x="40.7" y="2021" width="0.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="43.73" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="997" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt;::_Node_iterator_base (500,000 samples, 0.06%)</title><rect x="811.5" y="1909" width="0.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="814.48" y="1919.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::find (15,750,000 samples, 1.75%)</title><rect x="812.1" y="1957" width="20.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="815.14" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1829" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1839.5" ></text>
</g>
<g >
<title>TrieNode::TrieNode (500,000 samples, 0.06%)</title><rect x="792.9" y="1957" width="0.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="795.85" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="765.7" y="1989" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="768.72" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (250,000 samples, 0.03%)</title><rect x="1142.9" y="2005" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1145.93" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="309" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (41,750,000 samples, 4.63%)</title><rect x="1042.9" y="1973" width="54.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1045.91" y="1983.5" >[[ker..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (750,000 samples, 0.08%)</title><rect x="49.2" y="1989" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.22" y="1999.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;::~pair (3,500,000 samples, 0.39%)</title><rect x="844.8" y="1813" width="4.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="847.83" y="1823.5" ></text>
</g>
<g >
<title>operator new (500,000 samples, 0.06%)</title><rect x="629.1" y="1925" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="632.09" y="1935.5" ></text>
</g>
<g >
<title>operator delete (500,000 samples, 0.06%)</title><rect x="483.3" y="2021" width="0.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="486.31" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,000,000 samples, 1.11%)</title><rect x="545.4" y="1877" width="13.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="548.41" y="1887.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,000,000 samples, 2.44%)</title><rect x="152.5" y="1829" width="28.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="155.52" y="1839.5" >[[..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1445" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1455.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (750,000 samples, 0.08%)</title><rect x="847.4" y="661" width="1.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="850.44" y="671.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,000,000 samples, 0.11%)</title><rect x="619.3" y="1749" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="622.29" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34,250,000 samples, 3.80%)</title><rect x="660.1" y="1861" width="44.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="663.14" y="1871.5" >[[ke..</text>
</g>
<g >
<title>__memchr_avx2 (1,000,000 samples, 0.11%)</title><rect x="462.7" y="2005" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="465.71" y="2015.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (250,000 samples, 0.03%)</title><rect x="602.0" y="1941" width="0.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="604.96" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11,250,000 samples, 1.25%)</title><rect x="420.2" y="1813" width="14.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="423.22" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (13,000,000 samples, 1.44%)</title><rect x="767.4" y="1989" width="17.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="770.36" y="1999.5" ></text>
</g>
<g >
<title>_dl_relocate_object (250,000 samples, 0.03%)</title><rect x="441.1" y="2005" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="444.14" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,500,000 samples, 1.50%)</title><rect x="1004.3" y="1829" width="17.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1007.34" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1,750,000 samples, 0.19%)</title><rect x="846.5" y="1173" width="2.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="849.46" y="1183.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="889.0" y="1957" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="891.95" y="1967.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (750,000 samples, 0.08%)</title><rect x="588.2" y="2053" width="1.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="591.23" y="2063.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (128,750,000 samples, 14.27%)</title><rect x="266.6" y="1957" width="168.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="269.59" y="1967.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1109" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, unsigned long, true&gt;::_S_equals (3,750,000 samples, 0.42%)</title><rect x="820.0" y="1877" width="4.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="822.98" y="1887.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,250,000 samples, 1.58%)</title><rect x="1022.6" y="1973" width="18.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1025.64" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,000,000 samples, 0.55%)</title><rect x="614.1" y="1941" width="6.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="617.06" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (54,000,000 samples, 5.98%)</title><rect x="634.3" y="1973" width="70.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="637.32" y="1983.5" >[[kerne..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (250,000 samples, 0.03%)</title><rect x="602.3" y="1973" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="605.29" y="1983.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (250,000 samples, 0.03%)</title><rect x="848.1" y="597" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="851.09" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,500,000 samples, 0.17%)</title><rect x="703.0" y="1765" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="705.96" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="627.1" y="1877" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="630.13" y="1887.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,000,000 samples, 0.11%)</title><rect x="48.9" y="2005" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="51.90" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,500,000 samples, 0.17%)</title><rect x="972.0" y="1749" width="1.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="974.98" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1,500,000 samples, 0.17%)</title><rect x="1178.2" y="2053" width="2.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1181.23" y="2063.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::_M_ptr (250,000 samples, 0.03%)</title><rect x="840.6" y="1941" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="843.58" y="1951.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (3,500,000 samples, 0.39%)</title><rect x="844.8" y="1829" width="4.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="847.83" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,250,000 samples, 0.36%)</title><rect x="700.7" y="1781" width="4.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="703.68" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="586.6" y="2037" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="589.60" y="2047.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (53,250,000 samples, 5.90%)</title><rect x="635.3" y="1941" width="69.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="638.30" y="1951.5" >[[kerne..</text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (500,000 samples, 0.06%)</title><rect x="889.6" y="1989" width="0.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="892.61" y="1999.5" ></text>
</g>
<g >
<title>_IO_old_init (500,000 samples, 0.06%)</title><rect x="16.9" y="2021" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="19.86" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_do_relocate (750,000 samples, 0.08%)</title><rect x="630.1" y="1925" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="633.07" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="10.0" y="1925" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (43,750,000 samples, 4.85%)</title><rect x="501.3" y="2005" width="57.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="504.29" y="2015.5" >[[kern..</text>
</g>
<g >
<title>__GI___fileno (250,000 samples, 0.03%)</title><rect x="48.6" y="2037" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="51.57" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1045" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1055.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,500,000 samples, 0.50%)</title><rect x="595.1" y="1893" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="598.10" y="1903.5" ></text>
</g>
<g >
<title>std::stack&lt;TrieNode*, std::deque&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt; &gt;::top (250,000 samples, 0.03%)</title><rect x="1155.4" y="2005" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1158.35" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;::_M_valptr (250,000 samples, 0.03%)</title><rect x="807.9" y="1941" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="810.89" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (750,000 samples, 0.08%)</title><rect x="973.0" y="1717" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="975.96" y="1727.5" ></text>
</g>
<g >
<title>_int_free (250,000 samples, 0.03%)</title><rect x="1161.9" y="2053" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1164.89" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="213" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,500,000 samples, 1.05%)</title><rect x="1028.9" y="1877" width="12.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1031.85" y="1887.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (500,000 samples, 0.06%)</title><rect x="629.1" y="1941" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="632.09" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,000,000 samples, 0.11%)</title><rect x="48.9" y="2021" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="51.90" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="10.0" y="1973" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (250,000 samples, 0.03%)</title><rect x="805.6" y="1925" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="808.60" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (367,750,000 samples, 40.75%)</title><rect x="11.3" y="2053" width="480.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.31" y="2063.5" >[unknown]</text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (250,000 samples, 0.03%)</title><rect x="893.2" y="2005" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="896.20" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2,000,000 samples, 0.22%)</title><rect x="866.7" y="1957" width="2.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="869.73" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (250,000 samples, 0.03%)</title><rect x="1147.2" y="2005" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1150.18" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="245" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="255.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1349" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1359.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.2" y="1909" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.24" y="1919.5" ></text>
</g>
<g >
<title>_IO_file_fopen@@GLIBC_2.2.5 (250,000 samples, 0.03%)</title><rect x="42.7" y="2037" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="45.69" y="2047.5" ></text>
</g>
<g >
<title>TrieNode::getChild (20,000,000 samples, 2.22%)</title><rect x="806.6" y="1973" width="26.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="809.58" y="1983.5" >T..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1,750,000 samples, 0.19%)</title><rect x="846.5" y="1189" width="2.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="849.46" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (250,000 samples, 0.03%)</title><rect x="798.1" y="1877" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="801.08" y="1887.5" ></text>
</g>
<g >
<title>[TestFileIO] (250,000 samples, 0.03%)</title><rect x="835.3" y="1941" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="838.35" y="1951.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt; (500,000 samples, 0.06%)</title><rect x="839.9" y="1925" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="842.92" y="1935.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (750,000 samples, 0.08%)</title><rect x="826.5" y="1877" width="1.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="829.52" y="1887.5" ></text>
</g>
<g >
<title>__ctype_init (250,000 samples, 0.03%)</title><rect x="586.6" y="2053" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="589.60" y="2063.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.2" y="1925" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.24" y="1935.5" ></text>
</g>
<g >
<title>__GI___rmdir (61,500,000 samples, 6.81%)</title><rect x="893.5" y="2005" width="80.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="896.53" y="2015.5" >__GI___rm..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (2,000,000 samples, 0.22%)</title><rect x="814.8" y="1925" width="2.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="817.75" y="1935.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (250,000 samples, 0.03%)</title><rect x="435.6" y="2037" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="438.58" y="2047.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,250,000 samples, 0.69%)</title><rect x="604.6" y="1877" width="8.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="607.58" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (7,000,000 samples, 0.78%)</title><rect x="818.3" y="1909" width="9.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="821.35" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (5,750,000 samples, 0.64%)</title><rect x="820.0" y="1893" width="7.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="822.98" y="1903.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,250,000 samples, 0.91%)</title><rect x="590.2" y="2005" width="10.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="593.19" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,500,000 samples, 0.72%)</title><rect x="604.2" y="1893" width="8.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="607.25" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_deallocate_buckets (250,000 samples, 0.03%)</title><rect x="845.2" y="1701" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="848.15" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (31,750,000 samples, 3.52%)</title><rect x="980.5" y="1909" width="41.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="983.48" y="1919.5" >[[k..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.6" y="1877" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.56" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1925" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,500,000 samples, 0.83%)</title><rect x="602.9" y="1925" width="9.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="605.94" y="1935.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (750,000 samples, 0.08%)</title><rect x="776.5" y="1893" width="1.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="779.51" y="1903.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_convert_to_external (250,000 samples, 0.03%)</title><rect x="1183.5" y="2037" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1186.46" y="2047.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (500,000 samples, 0.06%)</title><rect x="787.3" y="1973" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="790.30" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (250,000 samples, 0.03%)</title><rect x="817.4" y="1925" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="820.37" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,500,000 samples, 0.50%)</title><rect x="614.7" y="1909" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="617.71" y="1919.5" ></text>
</g>
<g >
<title>_IO_file_close (750,000 samples, 0.08%)</title><rect x="492.8" y="2053" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="495.79" y="2063.5" ></text>
</g>
<g >
<title>__GI__IO_un_link.part.0 (2,000,000 samples, 0.22%)</title><rect x="497.7" y="2053" width="2.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="500.69" y="2063.5" ></text>
</g>
<g >
<title>__open64_nocancel (28,750,000 samples, 3.19%)</title><rect x="1097.5" y="2005" width="37.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1100.50" y="2015.5" >__o..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.2" y="2005" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.24" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (2,750,000 samples, 0.30%)</title><rect x="845.5" y="1685" width="3.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="848.48" y="1695.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,250,000 samples, 0.14%)</title><rect x="870.6" y="1973" width="1.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="873.65" y="1983.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (250,000 samples, 0.03%)</title><rect x="848.1" y="613" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="851.09" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (250,000 samples, 0.03%)</title><rect x="849.4" y="1893" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="852.40" y="1903.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;::_M_ptr (250,000 samples, 0.03%)</title><rect x="804.3" y="1893" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="807.29" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="101" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="111.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1509" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,250,000 samples, 0.91%)</title><rect x="590.2" y="2037" width="10.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="593.19" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,250,000 samples, 0.14%)</title><rect x="779.1" y="1909" width="1.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="782.12" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (2,250,000 samples, 0.25%)</title><rect x="846.1" y="1493" width="3.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="849.13" y="1503.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (36,750,000 samples, 4.07%)</title><rect x="1049.4" y="1877" width="48.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1052.45" y="1887.5" >[[ke..</text>
</g>
<g >
<title>__vsnprintf_internal (1,500,000 samples, 0.17%)</title><rect x="438.9" y="2037" width="1.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="441.85" y="2047.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34,750,000 samples, 3.85%)</title><rect x="976.6" y="1941" width="45.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="979.55" y="1951.5" >[[ke..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="741" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="751.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="600.7" y="1669" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="603.65" y="1679.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;TrieNode&gt;&gt; (250,000 samples, 0.03%)</title><rect x="796.4" y="1893" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="799.45" y="1903.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (750,000 samples, 0.08%)</title><rect x="611.8" y="1813" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="614.77" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (250,000 samples, 0.03%)</title><rect x="832.1" y="1941" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="835.08" y="1951.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (500,000 samples, 0.06%)</title><rect x="602.0" y="1989" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="604.96" y="1999.5" ></text>
</g>
<g >
<title>std::queue&lt;TrieNode*, std::deque&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt; &gt;::front (250,000 samples, 0.03%)</title><rect x="890.3" y="1989" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="893.26" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::unique_ptr (1,000,000 samples, 0.11%)</title><rect x="840.9" y="1973" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="843.90" y="1983.5" ></text>
</g>
<g >
<title>_int_free (250,000 samples, 0.03%)</title><rect x="874.9" y="1989" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="877.90" y="1999.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; (250,000 samples, 0.03%)</title><rect x="847.1" y="757" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="850.11" y="767.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,250,000 samples, 0.25%)</title><rect x="598.0" y="1813" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="601.04" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (500,000 samples, 0.06%)</title><rect x="49.6" y="1973" width="0.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.55" y="1983.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char&gt; (250,000 samples, 0.03%)</title><rect x="868.0" y="1941" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="871.03" y="1951.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="836.0" y="1925" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="839.00" y="1935.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,500,000 samples, 0.28%)</title><rect x="476.1" y="2021" width="3.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="479.12" y="2031.5" ></text>
</g>
<g >
<title>operator delete (250,000 samples, 0.03%)</title><rect x="1173.0" y="2053" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1176.00" y="2063.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,250,000 samples, 2.91%)</title><rect x="1100.8" y="1941" width="34.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1103.76" y="1951.5" >[[..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (250,000 samples, 0.03%)</title><rect x="632.0" y="1909" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="635.03" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (250,000 samples, 0.03%)</title><rect x="803.6" y="1845" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="806.64" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1333" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1343.5" ></text>
</g>
<g >
<title>__GI___mkdir (54,750,000 samples, 6.07%)</title><rect x="633.3" y="1989" width="71.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="636.34" y="1999.5" >__GI___m..</text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, false, true&gt;::operator (500,000 samples, 0.06%)</title><rect x="805.9" y="1941" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="808.93" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::unique_ptr&lt;std::default_delete&lt;TrieNode&gt;, void&gt; (750,000 samples, 0.08%)</title><rect x="838.3" y="1957" width="1.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="841.29" y="1967.5" ></text>
</g>
<g >
<title>_IO_old_init (2,000,000 samples, 0.22%)</title><rect x="44.6" y="2037" width="2.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="47.65" y="2047.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,000,000 samples, 0.22%)</title><rect x="584.0" y="1813" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="586.98" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="627.1" y="1781" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="630.13" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="773" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="783.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::is_open (250,000 samples, 0.03%)</title><rect x="468.9" y="2005" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="471.93" y="2015.5" ></text>
</g>
<g >
<title>__vfprintf_internal (500,000 samples, 0.06%)</title><rect x="13.6" y="37" width="0.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="16.60" y="47.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (500,000 samples, 0.06%)</title><rect x="601.3" y="1973" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="604.31" y="1983.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt; (250,000 samples, 0.03%)</title><rect x="842.9" y="1941" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="845.86" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt; (250,000 samples, 0.03%)</title><rect x="841.9" y="1925" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="844.88" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;TrieNode&gt; &gt;::_Tuple_impl (250,000 samples, 0.03%)</title><rect x="838.6" y="1893" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="841.61" y="1903.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (750,000 samples, 0.08%)</title><rect x="619.6" y="1733" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="622.61" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="627.1" y="1829" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="630.13" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (94,750,000 samples, 10.50%)</title><rect x="57.4" y="1941" width="123.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="60.40" y="1951.5" >[[kernel.kallsy..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,250,000 samples, 0.25%)</title><rect x="617.7" y="1781" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="620.65" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (250,000 samples, 0.03%)</title><rect x="848.4" y="1061" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="851.42" y="1071.5" ></text>
</g>
<g >
<title>_dl_map_object (500,000 samples, 0.06%)</title><rect x="1161.2" y="2053" width="0.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1164.24" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; (250,000 samples, 0.03%)</title><rect x="808.2" y="1957" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="811.22" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,500,000 samples, 0.28%)</title><rect x="251.2" y="1733" width="3.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="254.23" y="1743.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;::deallocate (250,000 samples, 0.03%)</title><rect x="845.5" y="1637" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="848.48" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,000,000 samples, 1.55%)</title><rect x="1023.0" y="1957" width="18.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1025.97" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (36,250,000 samples, 4.02%)</title><rect x="974.6" y="1989" width="47.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="977.59" y="1999.5" >[[ke..</text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_relocate (750,000 samples, 0.08%)</title><rect x="630.1" y="1941" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="633.07" y="1951.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::unordered_map (250,000 samples, 0.03%)</title><rect x="793.2" y="1941" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="796.18" y="1951.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (250,000 samples, 0.03%)</title><rect x="784.0" y="1973" width="0.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="787.03" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (2,750,000 samples, 0.30%)</title><rect x="800.7" y="1925" width="3.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="803.70" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,000,000 samples, 3.10%)</title><rect x="937.3" y="1861" width="36.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="940.33" y="1871.5" >[[k..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,250,000 samples, 2.80%)</title><rect x="989.0" y="1877" width="33.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="991.98" y="1887.5" >[[..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, TrieNode*, false&gt;::_Head_base (250,000 samples, 0.03%)</title><rect x="838.3" y="1909" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="841.29" y="1919.5" ></text>
</g>
<g >
<title>_IO_file_close_it@@GLIBC_2.2.5 (1,000,000 samples, 0.11%)</title><rect x="493.8" y="2053" width="1.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="496.77" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="325" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="335.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (250,000 samples, 0.03%)</title><rect x="473.2" y="2037" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="476.17" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (6,500,000 samples, 0.72%)</title><rect x="774.2" y="1941" width="8.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="777.22" y="1951.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_filebuf (2,500,000 samples, 0.28%)</title><rect x="468.3" y="2037" width="3.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="471.27" y="2047.5" ></text>
</g>
<g >
<title>std::deque&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt;::empty (250,000 samples, 0.03%)</title><rect x="882.4" y="1989" width="0.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="885.42" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (2,250,000 samples, 0.25%)</title><rect x="17.5" y="2021" width="3.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="20.52" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="586.6" y="1957" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="589.60" y="1967.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;::~pair (1,500,000 samples, 0.17%)</title><rect x="846.8" y="1109" width="1.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="849.79" y="1119.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (3,000,000 samples, 0.33%)</title><rect x="1135.1" y="2005" width="3.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1138.09" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (43,750,000 samples, 4.85%)</title><rect x="501.3" y="2037" width="57.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="504.29" y="2047.5" >[[kern..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (250,000 samples, 0.03%)</title><rect x="879.1" y="1989" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="882.15" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,750,000 samples, 0.86%)</title><rect x="171.1" y="1797" width="10.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="174.15" y="1807.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,750,000 samples, 0.30%)</title><rect x="886.0" y="1989" width="3.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="889.01" y="1999.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (2,000,000 samples, 0.22%)</title><rect x="846.5" y="1301" width="2.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="849.46" y="1311.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,500,000 samples, 1.39%)</title><rect x="570.3" y="1957" width="16.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="573.25" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,250,000 samples, 0.25%)</title><rect x="760.8" y="1701" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="763.82" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1493" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1503.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (32,000,000 samples, 3.55%)</title><rect x="1055.7" y="1861" width="41.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1058.66" y="1871.5" >[[k..</text>
</g>
<g >
<title>std::locale::locale (250,000 samples, 0.03%)</title><rect x="38.4" y="2021" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="41.44" y="2031.5" ></text>
</g>
<g >
<title>main (424,750,000 samples, 47.06%)</title><rect x="601.0" y="2037" width="555.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="603.98" y="2047.5" >main</text>
</g>
<g >
<title>[[kernel.kallsyms]] (48,250,000 samples, 5.35%)</title><rect x="191.4" y="1925" width="63.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="194.41" y="1935.5" >[[kern..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_deallocate_buckets (250,000 samples, 0.03%)</title><rect x="845.2" y="1717" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="848.15" y="1727.5" ></text>
</g>
<g >
<title>__GI__IO_un_link.part.0 (500,000 samples, 0.06%)</title><rect x="47.9" y="2037" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="50.92" y="2047.5" ></text>
</g>
<g >
<title>[TestFileIO] (500,000 samples, 0.06%)</title><rect x="791.9" y="1973" width="0.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="794.87" y="1983.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="792.9" y="1925" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="795.85" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="917" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="927.5" ></text>
</g>
<g >
<title>std::tuple&lt;TrieNode*, std::default_delete&lt;TrieNode&gt; &gt;::tuple&lt;TrieNode*, std::default_delete&lt;TrieNode&gt;, true&gt; (750,000 samples, 0.08%)</title><rect x="838.3" y="1925" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="841.29" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,000,000 samples, 4.43%)</title><rect x="506.2" y="1973" width="52.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="509.19" y="1983.5" >[[ker..</text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (250,000 samples, 0.03%)</title><rect x="804.9" y="1925" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="807.95" y="1935.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::find (250,000 samples, 0.03%)</title><rect x="843.5" y="1973" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="846.52" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1,250,000 samples, 0.14%)</title><rect x="764.1" y="1989" width="1.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="767.09" y="1999.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (500,000 samples, 0.06%)</title><rect x="492.1" y="2053" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="495.13" y="2063.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (36,500,000 samples, 4.04%)</title><rect x="510.8" y="1957" width="47.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="513.76" y="1967.5" >[[ke..</text>
</g>
<g >
<title>std::tuple&lt;TrieNode*, std::default_delete&lt;TrieNode&gt; &gt;::tuple&lt;TrieNode*&amp;, std::default_delete&lt;TrieNode&gt;, true&gt; (250,000 samples, 0.03%)</title><rect x="841.2" y="1941" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="844.23" y="1951.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::__uniq_ptr_impl (500,000 samples, 0.06%)</title><rect x="793.8" y="1941" width="0.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="796.83" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3,250,000 samples, 0.36%)</title><rect x="845.2" y="1733" width="4.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="848.15" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (98,250,000 samples, 10.89%)</title><rect x="52.8" y="2021" width="128.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.82" y="2031.5" >[[kernel.kallsym..</text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::~unique_ptr (1,000,000 samples, 0.11%)</title><rect x="847.1" y="917" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="850.11" y="927.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,500,000 samples, 0.28%)</title><rect x="583.3" y="1829" width="3.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="586.33" y="1839.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (7,500,000 samples, 0.83%)</title><rect x="817.7" y="1925" width="9.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="820.70" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,500,000 samples, 0.61%)</title><rect x="1034.1" y="1781" width="7.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1037.08" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::_M_deleter (250,000 samples, 0.03%)</title><rect x="841.9" y="1941" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="844.88" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (38,750,000 samples, 4.29%)</title><rect x="713.1" y="1861" width="50.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="716.10" y="1871.5" >[[ker..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1813" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1823.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (500,000 samples, 0.06%)</title><rect x="1185.8" y="2053" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1188.75" y="2063.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,000,000 samples, 0.78%)</title><rect x="591.8" y="1957" width="9.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="594.83" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (36,000,000 samples, 3.99%)</title><rect x="926.9" y="1877" width="47.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="929.87" y="1887.5" >[[ke..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (250,000 samples, 0.03%)</title><rect x="766.4" y="1989" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="769.38" y="1999.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,250,000 samples, 0.25%)</title><rect x="1139.0" y="2005" width="3.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1142.01" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="600.7" y="1653" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="603.65" y="1663.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (48,750,000 samples, 5.40%)</title><rect x="371.2" y="1861" width="63.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="374.19" y="1871.5" >[[kerne..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_deallocate_buckets (250,000 samples, 0.03%)</title><rect x="799.4" y="1877" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="802.39" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, false, true&gt;::_Node_const_iterator (250,000 samples, 0.03%)</title><rect x="832.4" y="1941" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="835.40" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="627.1" y="1765" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="630.13" y="1775.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::unordered_map (500,000 samples, 0.06%)</title><rect x="837.0" y="1941" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="839.98" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="581" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="591.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (500,000 samples, 0.06%)</title><rect x="36.5" y="2021" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="39.48" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,000,000 samples, 2.77%)</title><rect x="1102.4" y="1893" width="32.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1105.40" y="1903.5" >[[..</text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_max_size (250,000 samples, 0.03%)</title><rect x="629.7" y="1909" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="632.75" y="1919.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (42,000,000 samples, 4.65%)</title><rect x="199.6" y="1893" width="54.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="202.58" y="1903.5" >[[ker..</text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="788.0" y="1941" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="790.95" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52,250,000 samples, 5.79%)</title><rect x="113.0" y="1861" width="68.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="115.96" y="1871.5" >[[kerne..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,000,000 samples, 0.11%)</title><rect x="972.6" y="1733" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="975.63" y="1743.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (250,000 samples, 0.03%)</title><rect x="490.2" y="2005" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="493.17" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,750,000 samples, 0.42%)</title><rect x="1036.4" y="1733" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1039.37" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,750,000 samples, 0.19%)</title><rect x="1019.7" y="1781" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1022.70" y="1791.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;::max_size (250,000 samples, 0.03%)</title><rect x="801.0" y="1893" width="0.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="804.02" y="1903.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (250,000 samples, 0.03%)</title><rect x="1180.2" y="2053" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1183.19" y="2063.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_begin (250,000 samples, 0.03%)</title><rect x="798.4" y="1893" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="801.41" y="1903.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (1,000,000 samples, 0.11%)</title><rect x="14.2" y="1989" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="17.25" y="1999.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::_M_ptr (250,000 samples, 0.03%)</title><rect x="808.5" y="1957" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="811.54" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (500,000 samples, 0.06%)</title><rect x="180.6" y="1749" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="183.63" y="1759.5" ></text>
</g>
<g >
<title>fopen@@GLIBC_2.2.5 (250,000 samples, 0.03%)</title><rect x="458.5" y="2037" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="461.47" y="2047.5" ></text>
</g>
<g >
<title>__vfprintf_internal (250,000 samples, 0.03%)</title><rect x="15.2" y="1973" width="0.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="18.23" y="1983.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::~unordered_map (2,500,000 samples, 0.28%)</title><rect x="845.8" y="1573" width="3.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="848.81" y="1583.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::end (1,250,000 samples, 0.14%)</title><rect x="810.5" y="1957" width="1.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="813.50" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1733" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1743.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="600.7" y="1685" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="603.65" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,750,000 samples, 6.73%)</title><rect x="894.5" y="1989" width="79.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="897.51" y="1999.5" >[[kernel...</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1253" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1263.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt;::_M_destroy_nodes (250,000 samples, 0.03%)</title><rect x="891.6" y="1941" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="894.57" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="821" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (250,000 samples, 0.03%)</title><rect x="859.2" y="1973" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="862.21" y="1983.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (250,000 samples, 0.03%)</title><rect x="601.6" y="1925" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="604.63" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (28,250,000 samples, 3.13%)</title><rect x="985.1" y="1893" width="36.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="988.05" y="1903.5" >[[k..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="10.0" y="1989" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,500,000 samples, 0.28%)</title><rect x="617.3" y="1797" width="3.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="620.32" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,000,000 samples, 0.89%)</title><rect x="1030.8" y="1845" width="10.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1033.81" y="1855.5" ></text>
</g>
<g >
<title>std::stack&lt;TrieNode*, std::deque&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt; &gt;::empty (250,000 samples, 0.03%)</title><rect x="890.9" y="1989" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="893.91" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt; (250,000 samples, 0.03%)</title><rect x="794.2" y="1909" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="797.16" y="1919.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (41,750,000 samples, 4.63%)</title><rect x="1042.9" y="1989" width="54.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1045.91" y="1999.5" >[[ker..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,750,000 samples, 0.30%)</title><rect x="583.0" y="1845" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="586.00" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52,000,000 samples, 5.76%)</title><rect x="636.9" y="1909" width="68.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="639.94" y="1919.5" >[[kerne..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1893" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1903.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (250,000 samples, 0.03%)</title><rect x="40.4" y="2021" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="43.40" y="2031.5" ></text>
</g>
<g >
<title>__GI___libc_write (56,000,000 samples, 6.20%)</title><rect x="181.3" y="2037" width="73.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="184.28" y="2047.5" >__GI___l..</text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt;::_Node_iterator_base (500,000 samples, 0.06%)</title><rect x="831.4" y="1909" width="0.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="834.42" y="1919.5" ></text>
</g>
<g >
<title>std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ofstream (250,000 samples, 0.03%)</title><rect x="1149.5" y="2005" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1152.47" y="2015.5" ></text>
</g>
<g >
<title>fclose@@GLIBC_2.2.5 (3,000,000 samples, 0.33%)</title><rect x="479.4" y="2021" width="3.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="482.39" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="600.7" y="1749" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="603.65" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,000,000 samples, 0.44%)</title><rect x="1036.0" y="1749" width="5.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1039.04" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (500,000 samples, 0.06%)</title><rect x="797.4" y="1925" width="0.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="800.43" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="620.9" y="1925" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="623.92" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::~_Hashtable_alloc (250,000 samples, 0.03%)</title><rect x="848.7" y="1189" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="851.75" y="1199.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,500,000 samples, 0.83%)</title><rect x="576.8" y="1925" width="9.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="579.79" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="49.9" y="1925" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.88" y="1935.5" ></text>
</g>
<g >
<title>TrieNode::~TrieNode (250,000 samples, 0.03%)</title><rect x="848.1" y="533" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="851.09" y="543.5" ></text>
</g>
<g >
<title>operator new (250,000 samples, 0.03%)</title><rect x="1173.3" y="2053" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1176.33" y="2063.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::overflow (2,500,000 samples, 0.28%)</title><rect x="1180.5" y="2053" width="3.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1183.52" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="421" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="431.5" ></text>
</g>
<g >
<title>std::locale::~locale (250,000 samples, 0.03%)</title><rect x="785.0" y="1989" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="788.01" y="1999.5" ></text>
</g>
<g >
<title>check_match (250,000 samples, 0.03%)</title><rect x="1165.8" y="2053" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1168.81" y="2063.5" ></text>
</g>
<g >
<title>std::operator==&lt;char&gt; (2,500,000 samples, 0.28%)</title><rect x="821.6" y="1845" width="3.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="824.62" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end (1,000,000 samples, 0.11%)</title><rect x="810.8" y="1941" width="1.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="813.83" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,750,000 samples, 0.42%)</title><rect x="1130.2" y="1717" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1133.18" y="1727.5" ></text>
</g>
<g >
<title>TrieNode::~TrieNode (1,250,000 samples, 0.14%)</title><rect x="846.8" y="1061" width="1.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="849.79" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="197" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="207.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt; (250,000 samples, 0.03%)</title><rect x="796.8" y="1925" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="799.78" y="1935.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::~unique_ptr (750,000 samples, 0.08%)</title><rect x="842.2" y="1973" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="845.21" y="1983.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::_M_ptr (500,000 samples, 0.06%)</title><rect x="839.9" y="1957" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="842.92" y="1967.5" ></text>
</g>
<g >
<title>std::default_delete&lt;TrieNode&gt;::operator (2,500,000 samples, 0.28%)</title><rect x="845.8" y="1605" width="3.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="848.81" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="549" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="559.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2,250,000 samples, 0.25%)</title><rect x="853.3" y="1973" width="3.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="856.32" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,000,000 samples, 0.22%)</title><rect x="251.9" y="1717" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="254.88" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1,250,000 samples, 0.14%)</title><rect x="489.2" y="2021" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="492.19" y="2031.5" ></text>
</g>
<g >
<title>std::locale::locale (250,000 samples, 0.03%)</title><rect x="473.2" y="2005" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="476.17" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,250,000 samples, 0.36%)</title><rect x="1093.2" y="1797" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1096.25" y="1807.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;::allocator (250,000 samples, 0.03%)</title><rect x="837.0" y="1877" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="839.98" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1173" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1653" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1663.5" ></text>
</g>
<g >
<title>TrieNode::~TrieNode (3,250,000 samples, 0.36%)</title><rect x="845.2" y="1765" width="4.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="848.15" y="1775.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_deallocate (250,000 samples, 0.03%)</title><rect x="602.3" y="1957" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="605.29" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (6,750,000 samples, 0.75%)</title><rect x="797.1" y="1941" width="8.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="800.10" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,250,000 samples, 0.58%)</title><rect x="613.7" y="1957" width="6.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="616.73" y="1967.5" ></text>
</g>
<g >
<title>std::locale::~locale (750,000 samples, 0.08%)</title><rect x="473.8" y="2037" width="1.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="476.83" y="2047.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (250,000 samples, 0.03%)</title><rect x="612.7" y="2005" width="0.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="615.75" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,750,000 samples, 0.75%)</title><rect x="245.7" y="1781" width="8.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="248.67" y="1791.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,250,000 samples, 1.47%)</title><rect x="687.6" y="1813" width="17.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="690.60" y="1823.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (1,000,000 samples, 0.11%)</title><rect x="438.9" y="2021" width="1.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="441.85" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,000,000 samples, 0.22%)</title><rect x="584.0" y="1797" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="586.98" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_S_cget (250,000 samples, 0.03%)</title><rect x="827.8" y="1893" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="830.83" y="1903.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (134,750,000 samples, 14.93%)</title><rect x="258.7" y="2021" width="176.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="261.75" y="2031.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (1,750,000 samples, 0.19%)</title><rect x="846.5" y="1157" width="2.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="849.46" y="1167.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="600.7" y="1717" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="603.65" y="1727.5" ></text>
</g>
<g >
<title>__GI___unlink (138,000,000 samples, 15.29%)</title><rect x="254.5" y="2037" width="180.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="257.50" y="2047.5" >__GI___unlink</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,000,000 samples, 4.43%)</title><rect x="652.6" y="1877" width="52.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="655.63" y="1887.5" >[[ker..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (500,000 samples, 0.06%)</title><rect x="835.7" y="1941" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="838.67" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1941" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1951.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (750,000 samples, 0.08%)</title><rect x="823.9" y="1829" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="826.91" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,000,000 samples, 0.55%)</title><rect x="594.4" y="1925" width="6.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="597.44" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="627.1" y="1925" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="630.13" y="1935.5" ></text>
</g>
<g >
<title>TrieNode::TrieNode (1,750,000 samples, 0.19%)</title><rect x="835.3" y="1957" width="2.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="838.35" y="1967.5" ></text>
</g>
<g >
<title>TrieNode::~TrieNode (2,500,000 samples, 0.28%)</title><rect x="845.8" y="1589" width="3.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="848.81" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (750,000 samples, 0.08%)</title><rect x="798.7" y="1893" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="801.74" y="1903.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,250,000 samples, 0.25%)</title><rect x="598.0" y="1829" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="601.04" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,500,000 samples, 0.83%)</title><rect x="602.9" y="1957" width="9.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="605.94" y="1967.5" ></text>
</g>
<g >
<title>std::default_delete&lt;TrieNode&gt;::operator (2,250,000 samples, 0.25%)</title><rect x="846.1" y="1429" width="3.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="849.13" y="1439.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::deallocate (250,000 samples, 0.03%)</title><rect x="845.5" y="1653" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="848.48" y="1663.5" ></text>
</g>
<g >
<title>_IO_un_link (500,000 samples, 0.06%)</title><rect x="47.3" y="2037" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="50.26" y="2047.5" ></text>
</g>
<g >
<title>std::forward&lt;std::piecewise_construct_t const&amp;&gt; (250,000 samples, 0.03%)</title><rect x="802.7" y="1877" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="805.66" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="885" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="612.4" y="1781" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="615.42" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (250,000 samples, 0.03%)</title><rect x="489.8" y="2005" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="492.84" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (4,250,000 samples, 0.47%)</title><rect x="462.4" y="2021" width="5.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="465.39" y="2031.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (250,000 samples, 0.03%)</title><rect x="11.3" y="2037" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="14.31" y="2047.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsputn (750,000 samples, 0.08%)</title><rect x="460.8" y="2037" width="0.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="463.75" y="2047.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (750,000 samples, 0.08%)</title><rect x="847.4" y="773" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="850.44" y="783.5" ></text>
</g>
<g >
<title>std::forward&lt;TrieNode* const&amp;&gt; (250,000 samples, 0.03%)</title><rect x="890.6" y="1925" width="0.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="893.59" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1413" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="277" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,750,000 samples, 0.53%)</title><rect x="1015.8" y="1797" width="6.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1018.78" y="1807.5" ></text>
</g>
<g >
<title>std::default_delete&lt;TrieNode&gt;::operator (4,000,000 samples, 0.44%)</title><rect x="844.5" y="1957" width="5.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="847.50" y="1967.5" ></text>
</g>
<g >
<title>__GI___mkdir (7,750,000 samples, 0.86%)</title><rect x="602.6" y="2005" width="10.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="605.61" y="2015.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::release (250,000 samples, 0.03%)</title><rect x="796.8" y="1941" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="799.78" y="1951.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;::~pair (2,000,000 samples, 0.22%)</title><rect x="846.5" y="1285" width="2.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="849.46" y="1295.5" ></text>
</g>
<g >
<title>_IO_file_finish@@GLIBC_2.2.5 (250,000 samples, 0.03%)</title><rect x="42.4" y="2037" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="45.36" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="949" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="959.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2,000,000 samples, 0.22%)</title><rect x="846.5" y="1205" width="2.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="849.46" y="1215.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,000,000 samples, 0.11%)</title><rect x="180.0" y="1765" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="182.97" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="49.9" y="1941" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="52.88" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="693" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,500,000 samples, 0.83%)</title><rect x="602.9" y="1973" width="9.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="605.94" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="10.0" y="1893" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,250,000 samples, 2.91%)</title><rect x="1100.8" y="1925" width="34.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1103.76" y="1935.5" >[[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (250,000 samples, 0.03%)</title><rect x="462.1" y="2037" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="465.06" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, false, true&gt;::operator (250,000 samples, 0.03%)</title><rect x="807.9" y="1957" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="810.89" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11,000,000 samples, 1.22%)</title><rect x="572.2" y="1941" width="14.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="575.22" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="586.6" y="1973" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="589.60" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1,000,000 samples, 0.11%)</title><rect x="879.5" y="1989" width="1.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="882.47" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::get (1,250,000 samples, 0.14%)</title><rect x="808.9" y="1957" width="1.6" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="811.87" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,750,000 samples, 0.30%)</title><rect x="1131.5" y="1701" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1134.49" y="1711.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt;::_Tuple_impl (250,000 samples, 0.03%)</title><rect x="838.6" y="1909" width="0.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="841.61" y="1919.5" ></text>
</g>
<g >
<title>_int_free (11,500,000 samples, 1.27%)</title><rect x="441.5" y="2037" width="15.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="444.47" y="2047.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,750,000 samples, 1.08%)</title><rect x="1084.7" y="1813" width="12.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1087.75" y="1823.5" ></text>
</g>
<g >
<title>_itoa_word (250,000 samples, 0.03%)</title><rect x="35.8" y="2005" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="38.82" y="2015.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (500,000 samples, 0.06%)</title><rect x="472.5" y="2037" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="475.52" y="2047.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.2" y="1957" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.24" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,000,000 samples, 0.66%)</title><rect x="550.6" y="1861" width="7.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="553.64" y="1871.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::_M_ptr (250,000 samples, 0.03%)</title><rect x="794.2" y="1925" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="797.16" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,500,000 samples, 0.94%)</title><rect x="1030.2" y="1861" width="11.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1033.16" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="837" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="847.5" ></text>
</g>
<g >
<title>std::make_unique&lt;TrieNode, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (3,500,000 samples, 0.39%)</title><rect x="834.7" y="1973" width="4.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="837.69" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream (250,000 samples, 0.03%)</title><rect x="461.7" y="2037" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="464.73" y="2047.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (43,250,000 samples, 4.79%)</title><rect x="917.4" y="1893" width="56.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="920.39" y="1903.5" >[[ker..</text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5,750,000 samples, 0.64%)</title><rect x="863.1" y="1973" width="7.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="866.13" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,500,000 samples, 2.05%)</title><rect x="534.3" y="1909" width="24.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="537.30" y="1919.5" >[..</text>
</g>
<g >
<title>operator delete (250,000 samples, 0.03%)</title><rect x="877.8" y="1989" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="880.84" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1573" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1583.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,000,000 samples, 0.11%)</title><rect x="1096.2" y="1765" width="1.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1099.19" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1,000,000 samples, 0.11%)</title><rect x="880.8" y="1989" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="883.78" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::~unique_ptr (4,500,000 samples, 0.50%)</title><rect x="843.8" y="1973" width="5.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="846.84" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,750,000 samples, 0.42%)</title><rect x="596.1" y="1861" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="599.08" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2,500,000 samples, 0.28%)</title><rect x="13.6" y="2021" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="645" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="655.5" ></text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="889.0" y="1941" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="891.95" y="1951.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::sync (750,000 samples, 0.08%)</title><rect x="1148.5" y="2005" width="1.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1151.49" y="2015.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (250,000 samples, 0.03%)</title><rect x="1165.5" y="2053" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1168.48" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_Prime_rehash_policy (250,000 samples, 0.03%)</title><rect x="837.3" y="1909" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="840.31" y="1919.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (250,000 samples, 0.03%)</title><rect x="15.6" y="1989" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="18.56" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;::_M_valptr (750,000 samples, 0.08%)</title><rect x="820.3" y="1845" width="1.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="823.31" y="1855.5" ></text>
</g>
<g >
<title>PathTrie::PathTrie (2,000,000 samples, 0.22%)</title><rect x="791.9" y="1989" width="2.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="794.87" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,750,000 samples, 1.19%)</title><rect x="1027.2" y="1909" width="14.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1030.22" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::max_size (250,000 samples, 0.03%)</title><rect x="629.7" y="1925" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="632.75" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="357" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="367.5" ></text>
</g>
<g >
<title>TrieNode::setParent (250,000 samples, 0.03%)</title><rect x="832.7" y="1973" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="835.73" y="1983.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (250,000 samples, 0.03%)</title><rect x="632.0" y="1957" width="0.4" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="635.03" y="1967.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (250,000 samples, 0.03%)</title><rect x="462.4" y="2005" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="465.39" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,500,000 samples, 0.72%)</title><rect x="578.1" y="1893" width="8.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="581.10" y="1903.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,750,000 samples, 0.42%)</title><rect x="615.7" y="1845" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="618.69" y="1855.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (133,250,000 samples, 14.76%)</title><rect x="260.7" y="1989" width="174.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="263.71" y="1999.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_buckets (250,000 samples, 0.03%)</title><rect x="846.1" y="1333" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="849.13" y="1343.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.2" y="1893" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.24" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="565" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.6" y="1957" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.56" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,750,000 samples, 2.30%)</title><rect x="1108.0" y="1861" width="27.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1110.96" y="1871.5" >[..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1973" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (250,000 samples, 0.03%)</title><rect x="848.1" y="501" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="851.09" y="511.5" ></text>
</g>
<g >
<title>PathTrie::~PathTrie (4,500,000 samples, 0.50%)</title><rect x="843.8" y="1989" width="5.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="846.84" y="1999.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::deallocate (250,000 samples, 0.03%)</title><rect x="632.0" y="1925" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="635.03" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (750,000 samples, 0.08%)</title><rect x="770.6" y="1957" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="773.63" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="792.9" y="1941" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="795.85" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (1,000,000 samples, 0.11%)</title><rect x="847.1" y="805" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="850.11" y="815.5" ></text>
</g>
<g >
<title>operator new[] (250,000 samples, 0.03%)</title><rect x="468.6" y="2005" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="471.60" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="261" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="600.7" y="1797" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="603.65" y="1807.5" ></text>
</g>
<g >
<title>std::endl&lt;char, std::char_traits&lt;char&gt; &gt; (250,000 samples, 0.03%)</title><rect x="471.5" y="2005" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="474.54" y="2015.5" ></text>
</g>
<g >
<title>std::locale::~locale (750,000 samples, 0.08%)</title><rect x="1152.7" y="2005" width="1.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1155.74" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="10.0" y="2005" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>std::ostream::flush (500,000 samples, 0.06%)</title><rect x="1154.4" y="2005" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1157.37" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,750,000 samples, 1.97%)</title><rect x="1111.9" y="1845" width="23.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1114.88" y="1855.5" >[..</text>
</g>
<g >
<title>__close_nocancel (20,250,000 samples, 2.24%)</title><rect x="560.1" y="2053" width="26.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="563.12" y="2063.5" >_..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,750,000 samples, 0.30%)</title><rect x="1131.5" y="1685" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1134.49" y="1695.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,000,000 samples, 2.88%)</title><rect x="1101.1" y="1909" width="34.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.09" y="1919.5" >[[..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (1,000,000 samples, 0.11%)</title><rect x="847.1" y="949" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="850.11" y="959.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_deallocate_buckets (250,000 samples, 0.03%)</title><rect x="846.8" y="1013" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="849.79" y="1023.5" ></text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (250,000 samples, 0.03%)</title><rect x="882.7" y="1989" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="885.74" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,000,000 samples, 1.55%)</title><rect x="1116.8" y="1829" width="18.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1119.78" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1,750,000 samples, 0.19%)</title><rect x="775.9" y="1909" width="2.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="778.86" y="1919.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,500,000 samples, 0.17%)</title><rect x="802.3" y="1893" width="2.0" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="805.33" y="1903.5" ></text>
</g>
<g >
<title>std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ofstream (750,000 samples, 0.08%)</title><rect x="471.5" y="2037" width="1.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="474.54" y="2047.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (38,250,000 samples, 4.24%)</title><rect x="1047.5" y="1909" width="50.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1050.48" y="1919.5" >[[ker..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="627.1" y="1893" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="630.13" y="1903.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="10.0" y="2021" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.6" y="1909" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.56" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (250,000 samples, 0.03%)</title><rect x="882.1" y="1989" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="885.09" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="869" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="879.5" ></text>
</g>
<g >
<title>[unknown] (250,000 samples, 0.03%)</title><rect x="844.2" y="1941" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="847.17" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,750,000 samples, 0.42%)</title><rect x="615.7" y="1861" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="618.69" y="1871.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (123,750,000 samples, 13.71%)</title><rect x="273.1" y="1941" width="161.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="276.13" y="1951.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="85" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.6" y="1925" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.56" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,250,000 samples, 0.91%)</title><rect x="590.2" y="2021" width="10.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="593.19" y="2031.5" ></text>
</g>
<g >
<title>__xstat64 (5,750,000 samples, 0.64%)</title><rect x="613.1" y="2005" width="7.5" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="616.07" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (12,500,000 samples, 1.39%)</title><rect x="1024.9" y="1941" width="16.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1027.93" y="1951.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_use_relocate (250,000 samples, 0.03%)</title><rect x="631.1" y="1941" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="634.05" y="1951.5" ></text>
</g>
<g >
<title>TrieNode::~TrieNode (1,000,000 samples, 0.11%)</title><rect x="847.1" y="885" width="1.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="850.11" y="895.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,750,000 samples, 0.30%)</title><rect x="609.2" y="1845" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="612.15" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1,250,000 samples, 0.14%)</title><rect x="856.3" y="1973" width="1.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="859.27" y="1983.5" ></text>
</g>
<g >
<title>std::default_delete&lt;TrieNode&gt;::operator (1,500,000 samples, 0.17%)</title><rect x="846.8" y="1077" width="1.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="849.79" y="1087.5" ></text>
</g>
<g >
<title>std::deque&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt;::front (250,000 samples, 0.03%)</title><rect x="890.3" y="1973" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="893.26" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (250,000 samples, 0.03%)</title><rect x="837.6" y="1957" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="840.63" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (750,000 samples, 0.08%)</title><rect x="464.0" y="2005" width="1.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="467.02" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="586.6" y="2005" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="589.60" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,250,000 samples, 0.69%)</title><rect x="426.8" y="1797" width="8.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="429.76" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.6" y="2021" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.56" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.2" y="1989" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.24" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (250,000 samples, 0.03%)</title><rect x="888.6" y="1973" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="891.63" y="1983.5" ></text>
</g>
<g >
<title>mprotect (250,000 samples, 0.03%)</title><rect x="1161.6" y="2037" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1164.56" y="2047.5" ></text>
</g>
<g >
<title>[TestFileIO] (1,500,000 samples, 0.17%)</title><rect x="872.3" y="1989" width="1.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="875.28" y="1999.5" ></text>
</g>
<g >
<title>std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (500,000 samples, 0.06%)</title><rect x="784.4" y="1989" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="787.35" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (50,500,000 samples, 5.60%)</title><rect x="188.5" y="1957" width="66.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="191.47" y="1967.5" >[[kerne..</text>
</g>
<g >
<title>dl_main (500,000 samples, 0.06%)</title><rect x="440.8" y="2021" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="443.81" y="2031.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt; (500,000 samples, 0.06%)</title><rect x="839.9" y="1941" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="842.92" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (93,750,000 samples, 10.39%)</title><rect x="58.7" y="1925" width="122.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="61.70" y="1935.5" >[[kernel.kallsy..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (250,000 samples, 0.03%)</title><rect x="620.6" y="2005" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="623.59" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (97,250,000 samples, 10.78%)</title><rect x="54.1" y="1973" width="127.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.13" y="1983.5" >[[kernel.kallsy..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,500,000 samples, 4.49%)</title><rect x="1044.5" y="1957" width="53.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1047.54" y="1967.5" >[[ker..</text>
</g>
<g >
<title>TestCreateDir (16,000,000 samples, 1.77%)</title><rect x="601.0" y="2021" width="20.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="603.98" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (36,250,000 samples, 4.02%)</title><rect x="974.6" y="1957" width="47.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="977.59" y="1967.5" >[[ke..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,000,000 samples, 0.44%)</title><rect x="581.4" y="1861" width="5.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="584.37" y="1871.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::~unordered_map (3,250,000 samples, 0.36%)</title><rect x="845.2" y="1749" width="4.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="848.15" y="1759.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (9,500,000 samples, 1.05%)</title><rect x="23.7" y="2021" width="12.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="26.73" y="2031.5" ></text>
</g>
<g >
<title>TrieNode::getFullPath[abi:cxx11] (17,000,000 samples, 1.88%)</title><rect x="850.1" y="1989" width="22.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="853.06" y="1999.5" >T..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1093" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_state (500,000 samples, 0.06%)</title><rect x="799.7" y="1909" width="0.7" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="802.72" y="1919.5" ></text>
</g>
<g >
<title>__fxstat64 (8,500,000 samples, 0.94%)</title><rect x="589.9" y="2053" width="11.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="592.87" y="2063.5" ></text>
</g>
<g >
<title>_IO_old_init (250,000 samples, 0.03%)</title><rect x="844.2" y="1893" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="847.17" y="1903.5" ></text>
</g>
<g >
<title>std::operator!=&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,000,000 samples, 0.11%)</title><rect x="884.7" y="1989" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="887.70" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="437" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::_M_ptr (750,000 samples, 0.08%)</title><rect x="842.2" y="1957" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="845.21" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (44,750,000 samples, 4.96%)</title><rect x="196.0" y="1909" width="58.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="198.99" y="1919.5" >[[kern..</text>
</g>
<g >
<title>std::__iterator_category&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="803.3" y="1829" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="806.31" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="965" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="975.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,750,000 samples, 0.19%)</title><rect x="971.7" y="1765" width="2.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="974.65" y="1775.5" ></text>
</g>
<g >
<title>std::deque&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt;::~deque (500,000 samples, 0.06%)</title><rect x="891.2" y="1973" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="894.24" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;::_M_v (750,000 samples, 0.08%)</title><rect x="820.3" y="1861" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="823.31" y="1871.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (59,250,000 samples, 6.57%)</title><rect x="896.5" y="1941" width="77.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="899.47" y="1951.5" >[[kernel..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="517" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="527.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="149" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::~unique_ptr (2,500,000 samples, 0.28%)</title><rect x="845.8" y="1621" width="3.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="848.81" y="1631.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (39,000,000 samples, 4.32%)</title><rect x="1046.5" y="1941" width="51.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1049.50" y="1951.5" >[[ker..</text>
</g>
<g >
<title>malloc (250,000 samples, 0.03%)</title><rect x="458.8" y="2037" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="461.79" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (5,750,000 samples, 0.64%)</title><rect x="775.2" y="1925" width="7.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="778.20" y="1935.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2,500,000 samples, 0.28%)</title><rect x="845.8" y="1557" width="3.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="848.81" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (250,000 samples, 0.03%)</title><rect x="804.6" y="1925" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="807.62" y="1935.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (250,000 samples, 0.03%)</title><rect x="787.0" y="1973" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="789.97" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (750,000 samples, 0.08%)</title><rect x="434.0" y="1765" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="436.95" y="1775.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt; (750,000 samples, 0.08%)</title><rect x="809.5" y="1925" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="812.52" y="1935.5" ></text>
</g>
<g >
<title>__lxstat64 (43,000,000 samples, 4.76%)</title><rect x="1041.3" y="2005" width="56.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1044.27" y="2015.5" >__lxs..</text>
</g>
<g >
<title>__strlen_avx2 (1,500,000 samples, 0.17%)</title><rect x="21.1" y="2021" width="2.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="24.11" y="2031.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;::_M_ptr (750,000 samples, 0.08%)</title><rect x="820.3" y="1829" width="1.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="823.31" y="1839.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,250,000 samples, 1.02%)</title><rect x="961.8" y="1813" width="12.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="964.84" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,500,000 samples, 1.05%)</title><rect x="1122.7" y="1797" width="12.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1125.66" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,500,000 samples, 0.39%)</title><rect x="430.4" y="1781" width="4.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="433.35" y="1791.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;::~pair (250,000 samples, 0.03%)</title><rect x="848.1" y="581" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="851.09" y="591.5" ></text>
</g>
<g >
<title>remove (500,000 samples, 0.06%)</title><rect x="459.4" y="2037" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="462.45" y="2047.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;TrieNode&gt;, true&gt;::_Head_base&lt;std::default_delete&lt;TrieNode&gt; &gt; (250,000 samples, 0.03%)</title><rect x="841.2" y="1893" width="0.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="844.23" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (1,750,000 samples, 0.19%)</title><rect x="798.1" y="1925" width="2.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="801.08" y="1935.5" ></text>
</g>
<g >
<title>[TestFileIO] (1,000,000 samples, 0.11%)</title><rect x="891.9" y="2005" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="894.89" y="2015.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (1,750,000 samples, 0.19%)</title><rect x="846.5" y="1125" width="2.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="849.46" y="1135.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_deallocate_buckets (250,000 samples, 0.03%)</title><rect x="846.1" y="1365" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="849.13" y="1375.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (250,000 samples, 0.03%)</title><rect x="883.1" y="1989" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="886.07" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37,500,000 samples, 4.16%)</title><rect x="385.9" y="1845" width="49.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="388.90" y="1855.5" >[[ke..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_begin (500,000 samples, 0.06%)</title><rect x="798.7" y="1877" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="801.74" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, false, true&gt;::_Node_const_iterator (750,000 samples, 0.08%)</title><rect x="831.1" y="1925" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="834.10" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="629" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;TrieNode&gt; &gt;::_Tuple_impl (250,000 samples, 0.03%)</title><rect x="838.9" y="1909" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="841.94" y="1919.5" ></text>
</g>
<g >
<title>std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ofstream (500,000 samples, 0.06%)</title><rect x="1150.1" y="2005" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1153.12" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (500,000 samples, 0.06%)</title><rect x="836.3" y="1941" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="839.33" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="620.9" y="1957" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="623.92" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,500,000 samples, 0.50%)</title><rect x="606.9" y="1861" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="609.86" y="1871.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (250,000 samples, 0.03%)</title><rect x="874.6" y="1989" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="877.57" y="1999.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (250,000 samples, 0.03%)</title><rect x="633.0" y="1989" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="636.01" y="1999.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt; (250,000 samples, 0.03%)</title><rect x="796.4" y="1909" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="799.45" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (250,000 samples, 0.03%)</title><rect x="630.7" y="1861" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="633.73" y="1871.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,250,000 samples, 1.58%)</title><rect x="1022.6" y="1989" width="18.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1025.64" y="1999.5" ></text>
</g>
<g >
<title>std::make_unique&lt;TrieNode, char const  (1,250,000 samples, 0.14%)</title><rect x="792.9" y="1973" width="1.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="795.85" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (16,000,000 samples, 1.77%)</title><rect x="233.6" y="1813" width="20.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="236.58" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,250,000 samples, 0.80%)</title><rect x="591.5" y="1989" width="9.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="594.50" y="1999.5" ></text>
</g>
<g >
<title>__strlen_avx2 (750,000 samples, 0.08%)</title><rect x="861.2" y="1957" width="0.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="864.17" y="1967.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (500,000 samples, 0.06%)</title><rect x="1152.1" y="2005" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1155.08" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (15,250,000 samples, 1.69%)</title><rect x="538.5" y="1893" width="20.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="541.55" y="1903.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,250,000 samples, 0.80%)</title><rect x="591.5" y="1973" width="9.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="594.50" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (27,250,000 samples, 3.02%)</title><rect x="1099.5" y="1973" width="35.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1102.46" y="1983.5" >[[k..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (95,500,000 samples, 10.58%)</title><rect x="310.1" y="1909" width="124.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="313.07" y="1919.5" >[[kernel.kallsy..</text>
</g>
<g >
<title>std::endl&lt;char, std::char_traits&lt;char&gt; &gt; (250,000 samples, 0.03%)</title><rect x="1150.8" y="2005" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1153.78" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (750,000 samples, 0.08%)</title><rect x="847.4" y="645" width="1.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="850.44" y="655.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="788.0" y="1957" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="790.95" y="1967.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (1,000,000 samples, 0.11%)</title><rect x="435.9" y="2037" width="1.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="438.91" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::~unique_ptr (2,000,000 samples, 0.22%)</title><rect x="846.5" y="1269" width="2.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="849.46" y="1279.5" ></text>
</g>
<g >
<title>_IO_setb (1,750,000 samples, 0.19%)</title><rect x="495.4" y="2053" width="2.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="498.40" y="2063.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1,500,000 samples, 0.17%)</title><rect x="1156.3" y="2053" width="2.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1159.33" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (250,000 samples, 0.03%)</title><rect x="826.2" y="1877" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="829.19" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (500,000 samples, 0.06%)</title><rect x="589.2" y="2053" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="592.21" y="2063.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (250,000 samples, 0.03%)</title><rect x="601.3" y="1957" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="604.31" y="1967.5" ></text>
</g>
<g >
<title>memset (250,000 samples, 0.03%)</title><rect x="1161.2" y="2037" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1164.24" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt;::_Tuple_impl&lt;TrieNode*&amp;, std::default_delete&lt;TrieNode&gt;, void&gt; (250,000 samples, 0.03%)</title><rect x="841.2" y="1925" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="844.23" y="1935.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned (250,000 samples, 0.03%)</title><rect x="1158.3" y="2053" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1161.29" y="2063.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.6" y="1941" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.56" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="69" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="79.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (250,000 samples, 0.03%)</title><rect x="467.9" y="2037" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="470.94" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1013" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1023.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (500,000 samples, 0.06%)</title><rect x="13.6" y="53" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="16.60" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (250,000 samples, 0.03%)</title><rect x="766.7" y="1989" width="0.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="769.70" y="1999.5" ></text>
</g>
<g >
<title>std::queue&lt;TrieNode*, std::deque&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt; &gt;::push (250,000 samples, 0.03%)</title><rect x="890.6" y="1989" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="893.59" y="1999.5" ></text>
</g>
<g >
<title>TestFileIO (902,500,000 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >TestFileIO</text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,500,000 samples, 0.39%)</title><rect x="616.0" y="1829" width="4.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="619.02" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (1,000,000 samples, 0.11%)</title><rect x="816.1" y="1893" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="819.06" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (250,000 samples, 0.03%)</title><rect x="620.9" y="1973" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="623.92" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (48,250,000 samples, 5.35%)</title><rect x="641.8" y="1893" width="63.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="644.84" y="1903.5" >[[kern..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,000,000 samples, 0.22%)</title><rect x="875.2" y="1989" width="2.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="878.22" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="586.6" y="1941" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="589.60" y="1951.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::unique_ptr&lt;std::default_delete&lt;TrieNode&gt;, void&gt; (750,000 samples, 0.08%)</title><rect x="793.5" y="1957" width="1.0" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="796.51" y="1967.5" ></text>
</g>
<g >
<title>__vfprintf_internal (500,000 samples, 0.06%)</title><rect x="23.1" y="2021" width="0.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="26.07" y="2031.5" ></text>
</g>
<g >
<title>[TestFileIO] (250,000 samples, 0.03%)</title><rect x="768.3" y="1973" width="0.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="771.34" y="1983.5" ></text>
</g>
<g >
<title>std::ostream::put (500,000 samples, 0.06%)</title><rect x="471.9" y="2005" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="474.87" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="181.0" y="1701" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="183.95" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,250,000 samples, 0.47%)</title><rect x="1129.5" y="1733" width="5.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1132.53" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1,000,000 samples, 0.11%)</title><rect x="847.1" y="821" width="1.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="850.11" y="831.5" ></text>
</g>
<g >
<title>RemoveDir (79,000,000 samples, 8.75%)</title><rect x="788.6" y="2005" width="103.3" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="791.60" y="2015.5" >RemoveDir</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,250,000 samples, 0.47%)</title><rect x="758.2" y="1733" width="5.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="761.20" y="1743.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt;::_Tuple_impl (250,000 samples, 0.03%)</title><rect x="793.8" y="1925" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="796.83" y="1935.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (250,000 samples, 0.03%)</title><rect x="24.7" y="2005" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="27.71" y="2015.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (14,000,000 samples, 1.55%)</title><rect x="745.5" y="1765" width="18.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="748.46" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (98,250,000 samples, 10.89%)</title><rect x="52.8" y="2005" width="128.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="55.82" y="2015.5" >[[kernel.kallsym..</text>
</g>
<g >
<title>_IO_link_in (250,000 samples, 0.03%)</title><rect x="495.1" y="2053" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="498.07" y="2063.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, TrieNode*, false&gt;::_M_head (250,000 samples, 0.03%)</title><rect x="840.2" y="1893" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="843.25" y="1903.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19,500,000 samples, 2.16%)</title><rect x="561.1" y="2021" width="25.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="564.10" y="2031.5" >[..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="485" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="495.5" ></text>
</g>
<g >
<title>TrieNode::~TrieNode (2,250,000 samples, 0.25%)</title><rect x="846.1" y="1413" width="3.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="849.13" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="133" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (3,250,000 samples, 0.36%)</title><rect x="627.5" y="1973" width="4.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="630.46" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2,000,000 samples, 0.22%)</title><rect x="846.5" y="1365" width="2.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="849.46" y="1375.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (38,750,000 samples, 4.29%)</title><rect x="1046.8" y="1925" width="50.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1049.83" y="1935.5" >[[ker..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,000,000 samples, 0.66%)</title><rect x="593.1" y="1941" width="7.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="596.14" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (750,000 samples, 0.08%)</title><rect x="847.4" y="629" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="850.44" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (250,000 samples, 0.03%)</title><rect x="800.4" y="1925" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="803.37" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (2,000,000 samples, 0.22%)</title><rect x="846.5" y="1333" width="2.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="849.46" y="1343.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (54,000,000 samples, 5.98%)</title><rect x="634.3" y="1957" width="70.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="637.32" y="1967.5" >[[kerne..</text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::operator= (750,000 samples, 0.08%)</title><rect x="796.1" y="1957" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="799.12" y="1967.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::__uniq_ptr_impl&lt;std::default_delete&lt;TrieNode&gt; &gt; (500,000 samples, 0.06%)</title><rect x="840.9" y="1957" width="0.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="843.90" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="501" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="511.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,500,000 samples, 0.50%)</title><rect x="248.6" y="1765" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="251.61" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (250,000 samples, 0.03%)</title><rect x="847.1" y="789" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="850.11" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (3,500,000 samples, 0.39%)</title><rect x="844.8" y="1877" width="4.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="847.83" y="1887.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="10.0" y="2037" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (250,000 samples, 0.03%)</title><rect x="767.0" y="1989" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="770.03" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="181.0" y="1733" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="183.95" y="1743.5" ></text>
</g>
<g >
<title>TrieNode::~TrieNode (250,000 samples, 0.03%)</title><rect x="843.8" y="1957" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="846.84" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (500,000 samples, 0.06%)</title><rect x="465.0" y="2005" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="468.00" y="2015.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (250,000 samples, 0.03%)</title><rect x="630.7" y="1845" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="633.73" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::~unique_ptr (3,500,000 samples, 0.39%)</title><rect x="844.8" y="1797" width="4.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="847.83" y="1807.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (250,000 samples, 0.03%)</title><rect x="37.1" y="2021" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="40.13" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (250,000 samples, 0.03%)</title><rect x="845.5" y="1669" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="848.48" y="1679.5" ></text>
</g>
<g >
<title>std::default_delete&lt;TrieNode&gt;::operator (250,000 samples, 0.03%)</title><rect x="848.1" y="549" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="851.09" y="559.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.2" y="2021" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.24" y="2031.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;TrieNode*, TrieNode*&amp;, TrieNode**&gt;::_Deque_iterator (250,000 samples, 0.03%)</title><rect x="890.3" y="1957" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="893.26" y="1967.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (500,000 samples, 0.06%)</title><rect x="777.5" y="1877" width="0.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="780.49" y="1887.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,250,000 samples, 0.58%)</title><rect x="613.7" y="1989" width="6.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="616.73" y="1999.5" ></text>
</g>
<g >
<title>std::locale::~locale (250,000 samples, 0.03%)</title><rect x="884.4" y="1989" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="887.38" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,500,000 samples, 0.50%)</title><rect x="580.7" y="1877" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="583.71" y="1887.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (83,250,000 samples, 9.22%)</title><rect x="326.1" y="1893" width="108.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="329.08" y="1903.5" >[[kernel.kall..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (3,000,000 samples, 0.33%)</title><rect x="845.5" y="1717" width="3.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="848.48" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (500,000 samples, 0.06%)</title><rect x="837.0" y="1925" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="839.98" y="1935.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (250,000 samples, 0.03%)</title><rect x="602.0" y="1925" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="604.96" y="1935.5" ></text>
</g>
<g >
<title>operator new (250,000 samples, 0.03%)</title><rect x="459.1" y="2037" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="462.12" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::get (250,000 samples, 0.03%)</title><rect x="841.6" y="1957" width="0.3" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="844.56" y="1967.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (250,000 samples, 0.03%)</title><rect x="628.8" y="1909" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="631.76" y="1919.5" ></text>
</g>
<g >
<title>std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ofstream (500,000 samples, 0.06%)</title><rect x="1185.1" y="2053" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1188.10" y="2063.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (76,000,000 samples, 8.42%)</title><rect x="81.9" y="1893" width="99.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="84.91" y="1903.5" >[[kernel.kal..</text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::~unordered_map (1,250,000 samples, 0.14%)</title><rect x="846.8" y="1045" width="1.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="849.79" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_buckets (250,000 samples, 0.03%)</title><rect x="846.8" y="981" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="849.79" y="991.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (250,000 samples, 0.03%)</title><rect x="838.0" y="1957" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="840.96" y="1967.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt;::_M_head (250,000 samples, 0.03%)</title><rect x="794.2" y="1893" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="797.16" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (500,000 samples, 0.06%)</title><rect x="601.3" y="1989" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="604.31" y="1999.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (750,000 samples, 0.08%)</title><rect x="868.4" y="1925" width="0.9" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="871.36" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="901" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="911.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1,000,000 samples, 0.11%)</title><rect x="803.0" y="1877" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="805.99" y="1887.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (250,000 samples, 0.03%)</title><rect x="848.1" y="485" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="851.09" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1,000,000 samples, 0.11%)</title><rect x="847.1" y="837" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="850.11" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::~unique_ptr (250,000 samples, 0.03%)</title><rect x="848.1" y="565" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="851.09" y="575.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="10.0" y="2053" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="600.7" y="1781" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="603.65" y="1791.5" ></text>
</g>
<g >
<title>__GI___readdir64 (1,000,000 samples, 0.11%)</title><rect x="558.8" y="2053" width="1.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="561.81" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (250,000 samples, 0.03%)</title><rect x="797.8" y="1893" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="800.76" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (750,000 samples, 0.08%)</title><rect x="847.4" y="677" width="1.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="850.44" y="687.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (250,000 samples, 0.03%)</title><rect x="887.6" y="1973" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="890.65" y="1983.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (750,000 samples, 0.08%)</title><rect x="485.9" y="2021" width="1.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="488.92" y="2031.5" ></text>
</g>
<g >
<title>TrieNode::~TrieNode (750,000 samples, 0.08%)</title><rect x="847.4" y="709" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="850.44" y="719.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::~unordered_map (250,000 samples, 0.03%)</title><rect x="848.1" y="517" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="851.09" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (250,000 samples, 0.03%)</title><rect x="858.9" y="1973" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="861.88" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (43,500,000 samples, 4.82%)</title><rect x="706.9" y="1957" width="56.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="709.89" y="1967.5" >[[kern..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="889.0" y="1973" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="891.95" y="1983.5" ></text>
</g>
<g >
<title>virtual thunk to std::basic_ofstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ofstream (1,000,000 samples, 0.11%)</title><rect x="490.8" y="2037" width="1.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="493.83" y="2047.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (1,000,000 samples, 0.11%)</title><rect x="586.9" y="2053" width="1.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="589.93" y="2063.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (1,750,000 samples, 0.19%)</title><rect x="828.8" y="1893" width="2.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="831.81" y="1903.5" ></text>
</g>
<g >
<title>__vfprintf_internal (5,250,000 samples, 0.58%)</title><rect x="29.0" y="2005" width="6.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="31.96" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (7,750,000 samples, 0.86%)</title><rect x="772.6" y="1957" width="10.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="775.59" y="1967.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1,500,000 samples, 0.17%)</title><rect x="11.6" y="2021" width="2.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="14.63" y="2031.5" ></text>
</g>
<g >
<title>__GI___getcwd (1,000,000 samples, 0.11%)</title><rect x="48.9" y="2037" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="51.90" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::~unique_ptr (1,500,000 samples, 0.17%)</title><rect x="846.8" y="1093" width="1.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="849.79" y="1103.5" ></text>
</g>
<g >
<title>malloc_consolidate (250,000 samples, 0.03%)</title><rect x="1172.7" y="2053" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1175.68" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (3,500,000 samples, 0.39%)</title><rect x="844.8" y="1861" width="4.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="847.83" y="1871.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (43,500,000 samples, 4.82%)</title><rect x="706.9" y="1973" width="56.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="709.89" y="1983.5" >[[kern..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,500,000 samples, 1.05%)</title><rect x="1122.7" y="1781" width="12.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1125.66" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="597" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="607.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (43,000,000 samples, 4.76%)</title><rect x="707.5" y="1941" width="56.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="710.54" y="1951.5" >[[ker..</text>
</g>
<g >
<title>std::deque&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt;::push_back (250,000 samples, 0.03%)</title><rect x="890.6" y="1973" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="893.59" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,750,000 samples, 0.19%)</title><rect x="618.3" y="1765" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="621.30" y="1775.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="600.7" y="1637" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="603.65" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (19,500,000 samples, 2.16%)</title><rect x="561.1" y="2037" width="25.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="564.10" y="2047.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (133,000,000 samples, 14.74%)</title><rect x="261.0" y="1973" width="173.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="264.04" y="1983.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (250,000 samples, 0.03%)</title><rect x="797.8" y="1909" width="0.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="800.76" y="1919.5" ></text>
</g>
<g >
<title>__xstat64 (45,000,000 samples, 4.99%)</title><rect x="704.9" y="1989" width="58.9" height="15.0" fill="rgb(208,13,3)" rx="2" ry="2" />
<text  x="707.93" y="1999.5" >__xsta..</text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2,250,000 samples, 0.25%)</title><rect x="828.2" y="1909" width="2.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="831.16" y="1919.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt;*&gt;::pointer_to (250,000 samples, 0.03%)</title><rect x="847.1" y="773" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="850.11" y="783.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52,000,000 samples, 5.76%)</title><rect x="186.5" y="1989" width="68.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="189.51" y="1999.5" >[[kerne..</text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::unique_ptr&lt;std::default_delete&lt;TrieNode&gt;, void&gt; (250,000 samples, 0.03%)</title><rect x="804.0" y="1845" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="806.97" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (250,000 samples, 0.03%)</title><rect x="827.5" y="1909" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="830.50" y="1919.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,750,000 samples, 0.64%)</title><rect x="1127.6" y="1749" width="7.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.57" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1845" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1855.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;TrieNode*&gt; &gt;::construct&lt;TrieNode*, TrieNode* const&amp;&gt; (250,000 samples, 0.03%)</title><rect x="890.6" y="1957" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="893.59" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1717" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (84,500,000 samples, 9.36%)</title><rect x="70.8" y="1909" width="110.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="73.80" y="1919.5" >[[kernel.kall..</text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;::~pair (2,250,000 samples, 0.25%)</title><rect x="846.1" y="1461" width="3.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="849.13" y="1471.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (42,000,000 samples, 4.65%)</title><rect x="503.6" y="1989" width="54.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="506.57" y="1999.5" >[[ker..</text>
</g>
<g >
<title>_dl_sysdep_start (500,000 samples, 0.06%)</title><rect x="440.8" y="2037" width="0.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="443.81" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1237" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1247.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (36,250,000 samples, 4.02%)</title><rect x="974.6" y="1973" width="47.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="977.59" y="1983.5" >[[ke..</text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (750,000 samples, 0.08%)</title><rect x="1151.1" y="2005" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1154.10" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Node_const_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, false, true&gt;::_Node_const_iterator (1,000,000 samples, 0.11%)</title><rect x="810.8" y="1925" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="813.83" y="1935.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (1,000,000 samples, 0.11%)</title><rect x="474.8" y="2021" width="1.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="477.81" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,000,000 samples, 0.22%)</title><rect x="610.1" y="1829" width="2.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="613.13" y="1839.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,750,000 samples, 0.19%)</title><rect x="802.0" y="1909" width="2.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="805.01" y="1919.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="627.1" y="1909" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="630.13" y="1919.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="10.0" y="1877" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1887.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52,750,000 samples, 5.84%)</title><rect x="636.0" y="1925" width="68.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="638.96" y="1935.5" >[[kerne..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="10.0" y="1957" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (63,500,000 samples, 7.04%)</title><rect x="351.9" y="1877" width="83.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="354.91" y="1887.5" >[[kernel...</text>
</g>
<g >
<title>__strstr_sse2 (1,000,000 samples, 0.11%)</title><rect x="437.5" y="2037" width="1.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="440.55" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1317" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1327.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="181.0" y="1717" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="183.95" y="1727.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (33,000,000 samples, 3.66%)</title><rect x="515.3" y="1941" width="43.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="518.34" y="1951.5" >[[ke..</text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::operator (250,000 samples, 0.03%)</title><rect x="840.6" y="1973" width="0.3" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="843.58" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1589" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1599.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate (250,000 samples, 0.03%)</title><rect x="601.6" y="1941" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="604.63" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (250,000 samples, 0.03%)</title><rect x="849.1" y="1685" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="852.07" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_S_relocate (250,000 samples, 0.03%)</title><rect x="631.4" y="1957" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="634.38" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,500,000 samples, 0.50%)</title><rect x="614.7" y="1925" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="617.71" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (500,000 samples, 0.06%)</title><rect x="878.5" y="1989" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="881.49" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (500,000 samples, 0.06%)</title><rect x="862.1" y="1957" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="865.15" y="1967.5" ></text>
</g>
<g >
<title>malloc (250,000 samples, 0.03%)</title><rect x="866.4" y="1957" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="869.40" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (97,750,000 samples, 10.83%)</title><rect x="53.5" y="1989" width="127.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="56.47" y="1999.5" >[[kernel.kallsym..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::__uniq_ptr_impl (750,000 samples, 0.08%)</title><rect x="838.3" y="1941" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="841.29" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21,250,000 samples, 2.35%)</title><rect x="736.0" y="1797" width="27.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="738.98" y="1807.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="586.6" y="1925" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="589.60" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,500,000 samples, 0.83%)</title><rect x="1125.3" y="1765" width="9.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1128.28" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1125" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1135.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::~unique_ptr (750,000 samples, 0.08%)</title><rect x="847.4" y="741" width="1.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="850.44" y="751.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;TrieNode*, std::allocator&lt;TrieNode*&gt; &gt;::~_Deque_base (250,000 samples, 0.03%)</title><rect x="891.6" y="1957" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="894.57" y="1967.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (2,000,000 samples, 0.22%)</title><rect x="846.5" y="1317" width="2.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="849.46" y="1327.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.6" y="1989" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.56" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1429" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1621" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="117" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="127.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,750,000 samples, 0.19%)</title><rect x="786.0" y="1989" width="2.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="788.99" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1141" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1151.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,000,000 samples, 0.66%)</title><rect x="1033.4" y="1797" width="7.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1036.43" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1477" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (1,000,000 samples, 0.11%)</title><rect x="798.4" y="1909" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="801.41" y="1919.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (250,000 samples, 0.03%)</title><rect x="470.6" y="2005" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="473.56" y="2015.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (250,000 samples, 0.03%)</title><rect x="621.6" y="2005" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="624.57" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="933" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="943.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (1,000,000 samples, 0.11%)</title><rect x="487.9" y="2037" width="1.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="490.88" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq (750,000 samples, 0.08%)</title><rect x="824.9" y="1877" width="1.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="827.89" y="1887.5" ></text>
</g>
<g >
<title>std::locale::locale (250,000 samples, 0.03%)</title><rect x="490.5" y="2005" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="493.50" y="2015.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_get&lt;wchar_t, std::istreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t&gt; &gt; &gt; &gt;@plt (250,000 samples, 0.03%)</title><rect x="41.1" y="2021" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="44.05" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="469" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (35,750,000 samples, 3.96%)</title><rect x="717.0" y="1845" width="46.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="720.02" y="1855.5" >[[ke..</text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (500,000 samples, 0.06%)</title><rect x="785.3" y="1989" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="788.34" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (250,000 samples, 0.03%)</title><rect x="846.5" y="1109" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="849.46" y="1119.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (500,000 samples, 0.06%)</title><rect x="24.1" y="2005" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="27.06" y="2015.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (250,000 samples, 0.03%)</title><rect x="627.1" y="1957" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="630.13" y="1967.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_deallocate_buckets (250,000 samples, 0.03%)</title><rect x="846.1" y="1349" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="849.13" y="1359.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,500,000 samples, 1.94%)</title><rect x="999.1" y="1845" width="22.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1002.11" y="1855.5" >[..</text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;2, std::__detail::_Mod_range_hashing, true&gt;::_S_cget (750,000 samples, 0.08%)</title><rect x="815.1" y="1893" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="818.08" y="1903.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (60,750,000 samples, 6.73%)</title><rect x="894.5" y="1973" width="79.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="897.51" y="1983.5" >[[kernel...</text>
</g>
<g >
<title>operator delete (250,000 samples, 0.03%)</title><rect x="602.3" y="1925" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="605.29" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (1,000,000 samples, 0.11%)</title><rect x="847.1" y="981" width="1.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="850.11" y="991.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1365" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1375.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (500,000 samples, 0.06%)</title><rect x="1183.8" y="2053" width="0.6" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1186.79" y="2063.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;TrieNode&gt; &gt;::_Tuple_impl&lt;std::default_delete&lt;TrieNode&gt; &gt; (250,000 samples, 0.03%)</title><rect x="841.2" y="1909" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="844.23" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="788.0" y="1973" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="790.95" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,000,000 samples, 2.44%)</title><rect x="993.2" y="1861" width="28.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="996.22" y="1871.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (34,500,000 samples, 3.82%)</title><rect x="976.9" y="1925" width="45.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="979.88" y="1935.5" >[[ke..</text>
</g>
<g >
<title>operator delete[] (500,000 samples, 0.06%)</title><rect x="484.0" y="2021" width="0.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="486.96" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (750,000 samples, 0.08%)</title><rect x="434.0" y="1749" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="436.95" y="1759.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_deallocate_buckets (250,000 samples, 0.03%)</title><rect x="845.8" y="1525" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="848.81" y="1535.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate (250,000 samples, 0.03%)</title><rect x="601.6" y="1957" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="604.63" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,500,000 samples, 1.16%)</title><rect x="1027.5" y="1893" width="13.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1030.55" y="1903.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (3,500,000 samples, 0.39%)</title><rect x="844.8" y="1893" width="4.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="847.83" y="1903.5" ></text>
</g>
<g >
<title>std::default_delete&lt;TrieNode&gt;::operator (2,000,000 samples, 0.22%)</title><rect x="846.5" y="1253" width="2.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="849.46" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="405" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="415.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (250,000 samples, 0.03%)</title><rect x="473.5" y="2037" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="476.50" y="2047.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;::~pair (2,500,000 samples, 0.28%)</title><rect x="845.8" y="1637" width="3.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="848.81" y="1647.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (250,000 samples, 0.03%)</title><rect x="870.3" y="1957" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="873.32" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,500,000 samples, 0.50%)</title><rect x="614.7" y="1893" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="617.71" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="373" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;TrieNode*&gt;::construct&lt;TrieNode*, TrieNode* const&amp;&gt; (250,000 samples, 0.03%)</title><rect x="890.6" y="1941" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="893.59" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="586.6" y="2021" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="589.60" y="2031.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, TrieNode*, false&gt;::_M_head (250,000 samples, 0.03%)</title><rect x="809.9" y="1893" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="812.85" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1797" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (1,750,000 samples, 0.19%)</title><rect x="815.1" y="1909" width="2.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="818.08" y="1919.5" ></text>
</g>
<g >
<title>__strchr_avx2 (500,000 samples, 0.06%)</title><rect x="1160.6" y="2053" width="0.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1163.58" y="2063.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;TrieNode&gt; &gt; (250,000 samples, 0.03%)</title><rect x="834.4" y="1973" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="837.37" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_check_len (250,000 samples, 0.03%)</title><rect x="629.7" y="1941" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="632.75" y="1951.5" ></text>
</g>
<g >
<title>__GI___symlink (36,750,000 samples, 4.07%)</title><rect x="973.9" y="2005" width="48.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="976.94" y="2015.5" >__GI..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="661" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="671.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1029" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (250,000 samples, 0.03%)</title><rect x="798.1" y="1893" width="0.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="801.08" y="1903.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (2,500,000 samples, 0.28%)</title><rect x="845.8" y="1669" width="3.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="848.81" y="1679.5" ></text>
</g>
<g >
<title>TrieNode::~TrieNode (4,000,000 samples, 0.44%)</title><rect x="844.5" y="1941" width="5.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="847.50" y="1951.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (500,000 samples, 0.06%)</title><rect x="852.7" y="1973" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="855.67" y="1983.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (500,000 samples, 0.06%)</title><rect x="1153.7" y="2005" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1156.72" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_pbump (500,000 samples, 0.06%)</title><rect x="489.2" y="2005" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="492.19" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (500,000 samples, 0.06%)</title><rect x="858.2" y="1973" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="861.23" y="1983.5" ></text>
</g>
<g >
<title>TrieNode::getChild (250,000 samples, 0.03%)</title><rect x="849.7" y="1989" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="852.73" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,750,000 samples, 1.19%)</title><rect x="1121.0" y="1813" width="14.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1124.03" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="757" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;::_M_valptr (250,000 samples, 0.03%)</title><rect x="804.3" y="1909" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="807.29" y="1919.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,000,000 samples, 0.11%)</title><rect x="1187.7" y="2053" width="1.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1190.71" y="2063.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__detail::_Hash_node_base*&gt; (250,000 samples, 0.03%)</title><rect x="846.1" y="1285" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="849.13" y="1295.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (97,250,000 samples, 10.78%)</title><rect x="54.1" y="1957" width="127.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="57.13" y="1967.5" >[[kernel.kallsy..</text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (250,000 samples, 0.03%)</title><rect x="833.1" y="1973" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="836.06" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::begin (250,000 samples, 0.03%)</title><rect x="627.1" y="1973" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="630.13" y="1983.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (250,000 samples, 0.03%)</title><rect x="440.8" y="2005" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="443.81" y="2015.5" ></text>
</g>
<g >
<title>TrieNode::addChild (8,250,000 samples, 0.91%)</title><rect x="795.8" y="1973" width="10.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="798.80" y="1983.5" ></text>
</g>
<g >
<title>std::operator!=&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,750,000 samples, 0.30%)</title><rect x="859.5" y="1973" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="862.53" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1525" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1535.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (500,000 samples, 0.06%)</title><rect x="491.5" y="2005" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="494.48" y="2015.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::~unordered_map (1,000,000 samples, 0.11%)</title><rect x="847.1" y="869" width="1.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="850.11" y="879.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (26,250,000 samples, 2.91%)</title><rect x="524.2" y="1925" width="34.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="527.17" y="1935.5" >[[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (7,250,000 samples, 0.80%)</title><rect x="603.3" y="1909" width="9.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="606.27" y="1919.5" ></text>
</g>
<g >
<title>PathTrie::insert (37,750,000 samples, 4.18%)</title><rect x="794.5" y="1989" width="49.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="797.49" y="1999.5" >Path..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1989" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (37,750,000 samples, 4.18%)</title><rect x="1048.1" y="1893" width="49.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1051.14" y="1903.5" >[[ke..</text>
</g>
<g >
<title>TrieNode::~TrieNode (2,000,000 samples, 0.22%)</title><rect x="846.5" y="1237" width="2.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="849.46" y="1247.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (750,000 samples, 0.08%)</title><rect x="883.4" y="1989" width="1.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="886.40" y="1999.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::deallocate (250,000 samples, 0.03%)</title><rect x="602.3" y="1941" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="605.29" y="1951.5" ></text>
</g>
<g >
<title>operator delete (750,000 samples, 0.08%)</title><rect x="1142.0" y="2005" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1144.95" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;, true&gt;::~_Hashtable_ebo_helper (250,000 samples, 0.03%)</title><rect x="848.7" y="1173" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="851.75" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1909" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::deallocate (250,000 samples, 0.03%)</title><rect x="628.8" y="1925" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="631.76" y="1935.5" ></text>
</g>
<g >
<title>_IO_no_init (1,000,000 samples, 0.11%)</title><rect x="43.3" y="2037" width="1.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="46.34" y="2047.5" ></text>
</g>
<g >
<title>malloc (250,000 samples, 0.03%)</title><rect x="888.0" y="1973" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="890.97" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (52,500,000 samples, 5.82%)</title><rect x="185.9" y="2021" width="68.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="188.86" y="2031.5" >[[kerne..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (49,500,000 samples, 5.48%)</title><rect x="189.8" y="1941" width="64.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="192.78" y="1951.5" >[[kerne..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (6,500,000 samples, 0.72%)</title><rect x="1032.8" y="1813" width="8.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1035.78" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (2,250,000 samples, 0.25%)</title><rect x="846.1" y="1525" width="3.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="849.13" y="1535.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (11,750,000 samples, 1.30%)</title><rect x="1025.9" y="1925" width="15.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1028.91" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;TrieNode&gt; &gt;::_M_head (250,000 samples, 0.03%)</title><rect x="796.4" y="1877" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="799.45" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node_ptr (250,000 samples, 0.03%)</title><rect x="847.8" y="613" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="850.77" y="623.5" ></text>
</g>
<g >
<title>[TestFileIO] (500,000 samples, 0.06%)</title><rect x="775.2" y="1909" width="0.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="778.20" y="1919.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="600.7" y="1765" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="603.65" y="1775.5" ></text>
</g>
<g >
<title>__GI___getdents64 (44,500,000 samples, 4.93%)</title><rect x="500.3" y="2053" width="58.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="503.30" y="2063.5" >__GI__..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1749" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1301" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (1,500,000 samples, 0.17%)</title><rect x="13.6" y="2005" width="2.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1269" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1279.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (3,250,000 samples, 0.36%)</title><rect x="177.0" y="1781" width="4.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="180.03" y="1791.5" ></text>
</g>
<g >
<title>__libc_start_main (424,750,000 samples, 47.06%)</title><rect x="601.0" y="2053" width="555.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="603.98" y="2063.5" >__libc_start_main</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node_base*&gt; &gt;::deallocate (250,000 samples, 0.03%)</title><rect x="845.8" y="1509" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="848.81" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (25,750,000 samples, 2.85%)</title><rect x="220.8" y="1829" width="33.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="223.83" y="1839.5" >[[..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (250,000 samples, 0.03%)</title><rect x="627.8" y="1941" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="630.78" y="1951.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;::~pair (750,000 samples, 0.08%)</title><rect x="847.4" y="757" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="850.44" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_Hashtable_alloc (250,000 samples, 0.03%)</title><rect x="837.0" y="1909" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="839.98" y="1919.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream (1,250,000 samples, 0.14%)</title><rect x="489.2" y="2037" width="1.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="492.19" y="2047.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (250,000 samples, 0.03%)</title><rect x="20.8" y="2021" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="23.79" y="2031.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,750,000 samples, 0.53%)</title><rect x="1035.1" y="1765" width="6.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1038.06" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="341" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (58,000,000 samples, 6.43%)</title><rect x="898.1" y="1925" width="75.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="901.11" y="1935.5" >[[kernel..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="612.4" y="1797" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="615.42" y="1807.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="627.1" y="1813" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="630.13" y="1823.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,250,000 samples, 0.58%)</title><rect x="613.7" y="1973" width="6.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="616.73" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="620.3" y="1717" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="623.27" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt;, true&gt;::_Hashtable_ebo_helper (250,000 samples, 0.03%)</title><rect x="837.0" y="1893" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="839.98" y="1903.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (750,000 samples, 0.08%)</title><rect x="868.4" y="1941" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="871.36" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1557" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1567.5" ></text>
</g>
<g >
<title>[TestFileIO] (250,000 samples, 0.03%)</title><rect x="1155.7" y="2021" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1158.68" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (250,000 samples, 0.03%)</title><rect x="620.9" y="2005" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="623.92" y="2015.5" ></text>
</g>
<g >
<title>std::__relocate_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (750,000 samples, 0.08%)</title><rect x="630.1" y="1909" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="633.07" y="1919.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::allocate (750,000 samples, 0.08%)</title><rect x="801.0" y="1909" width="1.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="804.02" y="1919.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::~unordered_map (4,000,000 samples, 0.44%)</title><rect x="844.5" y="1925" width="5.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="847.50" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="725" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="735.5" ></text>
</g>
<g >
<title>__vsnprintf_internal (1,000,000 samples, 0.11%)</title><rect x="15.6" y="2005" width="1.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="18.56" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_deallocate_buckets (250,000 samples, 0.03%)</title><rect x="845.8" y="1541" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="848.81" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (250,000 samples, 0.03%)</title><rect x="878.2" y="1989" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="881.17" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="620.9" y="1941" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="623.92" y="1951.5" ></text>
</g>
<g >
<title>std::operator==&lt;TrieNode*, TrieNode*&amp;, TrieNode**&gt; (250,000 samples, 0.03%)</title><rect x="890.9" y="1973" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="893.91" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (39,250,000 samples, 4.35%)</title><rect x="203.2" y="1877" width="51.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="206.18" y="1887.5" >[[ker..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,500,000 samples, 0.50%)</title><rect x="595.1" y="1909" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="598.10" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1061" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1071.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (53,250,000 samples, 5.90%)</title><rect x="904.3" y="1909" width="69.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="907.32" y="1919.5" >[[kerne..</text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (500,000 samples, 0.06%)</title><rect x="631.7" y="1973" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="634.71" y="1983.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_destroy_internal_buffer (500,000 samples, 0.06%)</title><rect x="485.3" y="2021" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="488.27" y="2031.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (500,000 samples, 0.06%)</title><rect x="484.6" y="2021" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="487.61" y="2031.5" ></text>
</g>
<g >
<title>std::__relocate_object_a&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (500,000 samples, 0.06%)</title><rect x="630.4" y="1877" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="633.40" y="1887.5" ></text>
</g>
<g >
<title>std::default_delete&lt;TrieNode&gt;::operator (3,250,000 samples, 0.36%)</title><rect x="845.2" y="1781" width="4.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="848.15" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1637" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1647.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.2" y="1941" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.24" y="1951.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="627.1" y="1941" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="630.13" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1461" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1157" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1167.5" ></text>
</g>
<g >
<title>malloc (5,000,000 samples, 0.55%)</title><rect x="1166.1" y="2053" width="6.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1169.14" y="2063.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (250,000 samples, 0.03%)</title><rect x="782.4" y="1909" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="785.39" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2,500,000 samples, 0.28%)</title><rect x="468.3" y="2021" width="3.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="471.27" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (500,000 samples, 0.06%)</title><rect x="869.3" y="1957" width="0.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="872.34" y="1967.5" ></text>
</g>
<g >
<title>all (902,500,000 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (23,750,000 samples, 2.63%)</title><rect x="1104.0" y="1877" width="31.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1107.03" y="1887.5" >[[..</text>
</g>
<g >
<title>unlink_chunk.isra.0 (750,000 samples, 0.08%)</title><rect x="1189.0" y="2053" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1192.02" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (2,250,000 samples, 0.25%)</title><rect x="846.1" y="1509" width="3.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="849.13" y="1519.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="600.7" y="1701" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="603.65" y="1711.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (18,250,000 samples, 2.02%)</title><rect x="739.9" y="1781" width="23.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="742.90" y="1791.5" >[..</text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9,500,000 samples, 1.05%)</title><rect x="474.8" y="2037" width="12.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="477.81" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1397" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1407.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (750,000 samples, 0.08%)</title><rect x="14.2" y="1973" width="1.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="17.25" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (250,000 samples, 0.03%)</title><rect x="844.2" y="1957" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="847.17" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (34,500,000 samples, 3.82%)</title><rect x="209.4" y="1861" width="45.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="212.39" y="1871.5" >[[ke..</text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="677" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="687.5" ></text>
</g>
<g >
<title>std::__detail::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; (250,000 samples, 0.03%)</title><rect x="834.0" y="1973" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="837.04" y="1983.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (500,000 samples, 0.06%)</title><rect x="434.9" y="2037" width="0.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="437.93" y="2047.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (27,000,000 samples, 2.99%)</title><rect x="1099.8" y="1957" width="35.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1102.78" y="1967.5" >[[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (750,000 samples, 0.08%)</title><rect x="778.1" y="1909" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="781.14" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (1,000,000 samples, 0.11%)</title><rect x="847.1" y="1013" width="1.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="850.11" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1781" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1791.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (500,000 samples, 0.06%)</title><rect x="777.5" y="1893" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="780.49" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (250,000 samples, 0.03%)</title><rect x="468.3" y="2005" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="471.27" y="2015.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;::~pair (1,000,000 samples, 0.11%)</title><rect x="847.1" y="933" width="1.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="850.11" y="943.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="1161.2" y="1973" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1164.24" y="1983.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::~unordered_map (750,000 samples, 0.08%)</title><rect x="847.4" y="693" width="1.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="850.44" y="703.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="10.0" y="1941" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::end (250,000 samples, 0.03%)</title><rect x="812.5" y="1941" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="815.47" y="1951.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1,500,000 samples, 0.17%)</title><rect x="1158.6" y="2053" width="2.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1161.62" y="2063.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (500,000 samples, 0.06%)</title><rect x="487.2" y="2037" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="490.23" y="2047.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (134,750,000 samples, 14.93%)</title><rect x="258.7" y="2005" width="176.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="261.75" y="2015.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>std::locale::id::_M_id (500,000 samples, 0.06%)</title><rect x="37.8" y="2021" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="40.78" y="2031.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (250,000 samples, 0.03%)</title><rect x="626.8" y="1973" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="629.80" y="1983.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,250,000 samples, 1.02%)</title><rect x="751.7" y="1749" width="12.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="754.67" y="1759.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (32,500,000 samples, 3.60%)</title><rect x="212.0" y="1845" width="42.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="215.01" y="1855.5" >[[ke..</text>
</g>
<g >
<title>__strchrnul_avx2 (3,000,000 samples, 0.33%)</title><rect x="25.0" y="2005" width="4.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="28.04" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3,750,000 samples, 0.42%)</title><rect x="844.8" y="1909" width="4.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="847.83" y="1919.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (2,750,000 samples, 0.30%)</title><rect x="821.3" y="1861" width="3.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="824.29" y="1871.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (110,250,000 samples, 12.22%)</title><rect x="290.8" y="1925" width="144.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="293.78" y="1935.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>operator new (250,000 samples, 0.03%)</title><rect x="801.7" y="1893" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="804.68" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="165" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,500,000 samples, 0.50%)</title><rect x="595.1" y="1877" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="598.10" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="453" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="463.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::~unordered_map (2,000,000 samples, 0.22%)</title><rect x="846.5" y="1221" width="2.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="849.46" y="1231.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (8,250,000 samples, 0.91%)</title><rect x="694.1" y="1797" width="10.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="697.14" y="1807.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; &gt;::~unordered_map (2,250,000 samples, 0.25%)</title><rect x="846.1" y="1397" width="3.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="849.13" y="1407.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::get_deleter (250,000 samples, 0.03%)</title><rect x="841.9" y="1957" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="844.88" y="1967.5" ></text>
</g>
<g >
<title>std::addressof&lt;std::__detail::_Hash_node_base*&gt; (250,000 samples, 0.03%)</title><rect x="846.1" y="1301" width="0.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="849.13" y="1311.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt; (750,000 samples, 0.08%)</title><rect x="809.5" y="1909" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="812.52" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2,000,000 samples, 0.22%)</title><rect x="1175.6" y="2053" width="2.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1178.62" y="2063.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt; (1,750,000 samples, 0.19%)</title><rect x="846.5" y="1141" width="2.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="849.46" y="1151.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (1,000,000 samples, 0.11%)</title><rect x="1187.7" y="2037" width="1.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1190.71" y="2047.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (250,000 samples, 0.03%)</title><rect x="874.2" y="1989" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="877.24" y="1999.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,250,000 samples, 0.14%)</title><rect x="1095.9" y="1781" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1098.86" y="1791.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (250,000 samples, 0.03%)</title><rect x="798.1" y="1909" width="0.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="801.08" y="1919.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (250,000 samples, 0.03%)</title><rect x="862.8" y="1957" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="865.80" y="1967.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (40,750,000 samples, 4.52%)</title><rect x="710.5" y="1893" width="53.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="713.48" y="1903.5" >[[ker..</text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (500,000 samples, 0.06%)</title><rect x="460.1" y="2037" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="463.10" y="2047.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;TrieNode*&gt; &gt;::deallocate (250,000 samples, 0.03%)</title><rect x="891.6" y="1909" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="894.57" y="1919.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (250,000 samples, 0.03%)</title><rect x="889.3" y="1973" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="892.28" y="1983.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::~unique_ptr (2,250,000 samples, 0.25%)</title><rect x="846.1" y="1445" width="3.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="849.13" y="1455.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (750,000 samples, 0.08%)</title><rect x="10.3" y="2053" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.33" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="789" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (2,750,000 samples, 0.30%)</title><rect x="827.5" y="1925" width="3.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="830.50" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (250,000 samples, 0.03%)</title><rect x="793.2" y="1925" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="796.18" y="1935.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt;::_M_head (250,000 samples, 0.03%)</title><rect x="840.2" y="1909" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="843.25" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="853" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="863.5" ></text>
</g>
<g >
<title>std::locale::operator= (500,000 samples, 0.06%)</title><rect x="38.8" y="2021" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="41.76" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (1,000,000 samples, 0.11%)</title><rect x="847.1" y="997" width="1.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="850.11" y="1007.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (500,000 samples, 0.06%)</title><rect x="470.9" y="2005" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="473.89" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1205" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1215.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::_M_ptr (1,000,000 samples, 0.11%)</title><rect x="809.2" y="1941" width="1.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="812.20" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1685" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (14,750,000 samples, 1.63%)</title><rect x="812.8" y="1941" width="19.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="815.79" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (2,250,000 samples, 0.25%)</title><rect x="846.1" y="1541" width="3.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="849.13" y="1551.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, TrieNode*, std::default_delete&lt;TrieNode&gt; &gt; (250,000 samples, 0.03%)</title><rect x="842.9" y="1925" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="845.86" y="1935.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="600.7" y="1733" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="603.65" y="1743.5" ></text>
</g>
<g >
<title>__close_nocancel (14,750,000 samples, 1.63%)</title><rect x="1022.0" y="2005" width="19.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1024.99" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="389" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_h1 (250,000 samples, 0.03%)</title><rect x="827.8" y="1909" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="830.83" y="1919.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (250,000 samples, 0.03%)</title><rect x="973.6" y="1701" width="0.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="976.61" y="1711.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (250,000 samples, 0.03%)</title><rect x="469.3" y="2005" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="472.25" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (2,000,000 samples, 0.22%)</title><rect x="846.5" y="1349" width="2.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="849.46" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;TrieNode, std::default_delete&lt;TrieNode&gt; &gt;::get_deleter (250,000 samples, 0.03%)</title><rect x="795.8" y="1957" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="798.80" y="1967.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (250,000 samples, 0.03%)</title><rect x="470.2" y="2005" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="473.23" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (500,000 samples, 0.06%)</title><rect x="13.6" y="1877" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.60" y="1887.5" ></text>
</g>
<g >
<title>_IO_default_finish (250,000 samples, 0.03%)</title><rect x="42.0" y="2037" width="0.4" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="45.03" y="2047.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (250,000 samples, 0.03%)</title><rect x="621.2" y="2005" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="624.25" y="2015.5" ></text>
</g>
</g>
</svg>
